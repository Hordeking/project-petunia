; This file contains all the code the runs at c000 - ffff
; in the NES version.  This gets copied into every bank
; so that it's available to all the a1: - a6: banks.
  setAXY8
  LDA #$03
  STA $6FFA   
  LDA #$7F    
  STA $6FFB   

  JSR @set_up_bank_switching   

  ; copy data from F081 to 6000 for... something
  LDX #$00                 
: LDA $F081,X              
  STA $6000,X              
  INX                      
  BNE :-

  ; zero out some stuff
  LDA #$00                 
  TAX                      
: STA $0100,X              
  STA $0200,X              
  STA $0300,X              
  STA $0400,X              
  STA $0500,X              
  STA $0600,X              
  STA $0700,X              
  INX                      
  BNE :-
          
  LDA #$F0                 
  JSR @clear_zero_page_to_f1      
  ; clears more of the zero page         
  LDX #$F2                 
: STA $00,X                
  INX                      
  CPX #$FA                 
  BCC :-

  ; zero out some more specific variables
  STA $AD                  
  STA $AE                  
  STA $70                  
  STA $72                  
  STA $73                  
  STA $A2  

  JSR @nes_c846                
  JSR @handle_input  
  
  ; buffer to push c06d to the proper spot
  .byte $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA  
  .byte $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA
  ; IT IS IMPORTANT THIS IS AT EXACTLY C06D
  @nes_c06d:
  ; LDA #$00        ; LDA #$00             
  JSL disable_nmi_force_vblank
  ; STZ INIDISP     ; STA PpuControl_2000       
  ; STZ NMITIMEN    ; STA PpuMask_2001         
  ; STZ $0100                

  LDA $38                  
  BMI @nes_c08d
  AND #$0F                 
  BEQ :+
  JMP $C1D4     ; this is most certainly wrong.              
: LDA $A0                  
  JSR @nes_c0c9                
  LDA #$A0                 
  JSR @nes_c23d 
  NOP
  NOP
  NOP
  NOP
@nes_c08d:
  LDA $A0                  
  CMP #$09                 
  BEQ :+                
  JSR @c331                
: JSR @c24a                 
  STZ $38   
  lda #$81
  STA NMITIMEN
  JMP $7F00   

;c0a0 - c0c8
  LDA $A0                  
  STA $AC                  
  LDA #$01                 
  STA $37                  
  LDA #$00                 
  STA $14                  
  STA $15                  
  LDA #$80                 
  STA $0384                
: LDA $14                  
  CMP #$60                 
  BCC :-               
  JSR $EEF0                
  JSR $C450                
  JSR $C44B                
  LDA #$03                 
  STA $38                  
  JMP $C06D                
  ; .byte $00, $00, $00, $00
  ; .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00  
  ; .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 
  ; .byte $00, $00, $00, $00, $00, $00
;c0c9 - c14f
@nes_c0c9:
  .byte $EA, $EA, $EA, $EA, $EA, $EA, $EA 
  
  .byte $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA 
  .byte $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA
  .byte $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA
  
  .byte $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA
  .byte $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA
  .byte $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA
  .byte $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA
   JMP @moved_nes_c0c9

  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00  
  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00  
  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 
  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 

; c17f nes address ; snes currently c17f - c1a8
@nes_c17f:
  JMP @switch_bank
  
  ; buffer for the rest
  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00  
  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00 
  .byte $00, $00, $00, $00, $00, $00


@c1a8:
; this is tile data locations, pointed to by the @c15c indrect jump table
; since this is pointing to data outside the c000-ffff range, we don't change the pointers
.byte $01, $00, $A0
.byte $01, $00, $A0
.byte $02, $00, $80
.byte $05, $00, $80
.byte $02, $A0, $99
.byte $05, $00, $80
.byte $03, $00, $80
.byte $05, $00, $80
.byte $03, $30, $9C
.byte $04, $00, $80

; c1c6-c210
  LDY #$00                 
  LDX $AF                  
  BEQ :+
  LDY #$27                 
  DEX                      
  BEQ :+
  LDY #$4E                 
: RTS              

  JSR $EEF0                
  LDA #$10                 
  STA $0100                
  JSR $C26F                
  LDA $38                  
  JSR $C2A0                
  LDA $38                  
  CMP #$04                 
;   BNE :+              
; : LDA PpuStatus_2002       
;   BPL :-
  .byte $ea, $ea, $ea, $ea, $ea, $ea, $ea
  JSR $EE42                
  JSR $EB2E                
  JSR $EF01                
: LDA $A3                  
  BNE :-       

  ; Set to BG 0, no NMI     
  LDA #$10                 
  ; STA PPU_CONTROL_STATE             
  ; STA PpuControl_2000        
  JSL store_to_ppu_control   
  .byte $ea, $ea

  LDA #$03                 
  STA $6FFA                
  LDA #$7F                 
  STA $6FFB                
  JMP $C06D                

.byte $48, $20, $4A, $C2, $20, $F0, $EE, $68, $48, $29, $F0, $4A, $4A, $4A, $4A
.byte $8D, $10, $07, $68, $29, $0F, $8D, $11, $07, $A2, $00, $BD, $2D, $C3, $9D, $0C
.byte $07, $E8, $E0, $04, $D0, $F5, $A9, $05, $85, $38, $4C, $6D, $C0

@clear_zero_page_to_f1:
@nes_c23d:
  STA $F1                  
  LDX #$00                 
  TXA     
: STA $00,X                
  INX                      
  CPX $F1                  
  BCC :-              
  RTS 

@c24a:
  LDA #$10                 
  STA PPU_CONTROL_STATE                
  LDA #$1E
  STA PPU_MASK_STATE               
  RTS                      

.byte $85, $00, $C6, $00, $A5, $00, $0A, $0A, $18, $65, $00, $AA
.byte $A0, $00, $BD, $EA, $C2, $99, $41, $00, $E8, $C8, $C0, $05, $D0, $F4, $60, $A2
.byte $00, $A9, $39, $8D, $FA, $6F, $A9, $C3, $8D, $FB, $6F, $A9, $FF, $85, $A3, $20
.byte $73, $EF, $20, $F9, $E3, $20, $CD, $C2, $20, $E5, $EE, $A9, $00, $85, $82, $85
.byte $14, $85, $15, $85, $18, $E6, $1A, $A5, $38, $C9, $03, $F0, $D1, $4C, $31, $C3
.byte $20, $54, $C2, $20, $B3, $C2, $A5, $38, $C9, $04, $D0, $20, $20, $8A, $C3, $20
.byte $A1, $C8, $60

; c2b3
@copy_data_to_ppu:
  NOP ; LDA PpuStatus_2002
  NOP
  NOP
  LDA $42
  STA VMADDH
  LDA $41
  STA VMADDL
  LDY #$00
: LDA ($43),Y
  STA VMDATAL
  INY
  CPY $45
  BNE :-
  RTS
                  

@c2cd:
.byte $A0, $00, $A2

.byte $04, $B9, $E2, $C2, $99, $90, $03, $B9, $E6, $C2, $99, $A0, $03, $C8, $CA, $D0
.byte $F0, $60, $0F, $30, $2C, $30, $0F, $27, $26, $06, $E8, $21, $00, $00, $0F, $E8
.byte $21, $00, $00, $0F, $EA, $21, $0D, $C3, $0D, $AA, $21, $1A, $C3, $0C, $ED, $21

; c300
.byte $0C, $07, $06, $CC, $21, $00, $00, $08, $2B, $22, $26, $C3, $07, $1E, $10, $22
.byte $12, $1B, $1E, $23, $1E, $28, $1D, $1A, $19, $0E, $28, $16, $18, $27, $1A, $19
.byte $12, $2C, $24, $27, $19, $28, $23, $0F, $31, $10, $12, $22, $3E, $1A, $27, $27
.byte $0D

;c331
@c331:
  LDA #$01                 
  STA $0380                
  JMP $C856                

.byte $8A, $48, $98, $48, $AD, $02, $20
.byte $20, $2E, $EB, $20, $42, $EE, $20, $57, $C3, $20, $6A, $EE, $20, $94, $EE, $20
.byte $56, $C8, $68, $A8, $68, $AA, $60, $A5, $38, $20, $2B, $EE, $7E, $C3, $7E, $C3
.byte $7E, $C3, $6A, $C3, $7F, $C3, $7E, $C3, $7E, $C3, $A5, $14, $C9, $80, $90, $0E
.byte $E6, $AD, $D0, $02, $E6, $AE, $A9, $04, $85, $38, $A9, $00, $85, $A3, $60, $A5

.byte $18, $29, $10, $F0, $F9, $A9, $00, $4C, $78, $C3, $20, $C6, $C1, $A5, $A0, $99
.byte $28, $60, $A5, $AB, $6A, $B0, $27, $E6, $AB, $AD, $30, $01, $99, $29, $60, $A6
.byte $AC, $24, $AB, $70, $07, $A9, $00, $99, $29, $60, $A2, $02, $8A, $99, $28, $60
.byte $A2, $00, $BD, $57, $01, $99, $0D, $60, $C8, $E8, $E0, $1B, $D0, $F4, $60

  LDA #$90                 
  STA $0701,X              
  LDA #$00                 
  STA $0704,X              
  LDA #$00                 
  STA $0708,X              
  STA $1C                  
  STA $1D                  
  STA $1E                  
  STA $1F                  
  STA $3E                  
  RTS 

; c3d9
  LDX #$20                 
  LDA #$14                 
  JMP $DCE0 
                 
; c3e0
  LDA $0152                
  AND #$07                 
  CMP #$05                 
  BCC :+                
  LDA $0152                
  AND #$F8                 
  ORA #$04                 
  STA $0152                
  AND #$07                 
: ASL A                    
  TAY                      
  LDA $C409,Y              
  STA $03A1                
  LDA #$26                 
  STA $03A2                
  LDA $C40A,Y              
  STA $03A3                
  RTS                      

;c409
.byte $20, $07, $39, $0A, $32, $13, $34
.byte $05, $3C, $11, $A9, $00, $8D, $2F, $01, $85, $36, $8D, $4A, $01, $8D, $4B, $01
.byte $85, $A5, $A9, $00, $8D, $30, $01, $4C, $4B, $C4

; c42a
  LDA #$00                 
  STA $AB                  
  STA $14       
  STA $15       
  STA $37                  
  STA $3A                  
  STA $3F                  
  STA $40                  
  STA $41                  
  STA $42                  
  STA $45                  
  STA $5C                  
  STA $19                  
  STA $A5                  
  STA $A7                  
  STA $72                  
  RTS                      

.byte $A9, $0F, $85, $A6, $60
.byte $4C, $A2, $EA, $A0, $00, $20, $6D, $C4, $C8, $20, $6D, $C4, $C8, $20, $6D, $C4
.byte $A0, $00, $20, $86, $C4, $C8, $20, $86, $C4, $C8, $4C, $86, $C4, $B9, $3E, $01
.byte $30, $0C, $29, $02, $F0, $08, $A5, $A5, $19, $C4, $C4, $85, $A5, $60, $A5, $A5

.byte $39, $C7, $C4, $85, $A5, $60, $A5, $A6, $D9, $CA, $C4, $B0, $16, $A5, $AA, $D0
.byte $23, $20, $B5, $C4, $F0, $1E, $AA, $CA, $BD, $3E, $01, $29, $80, $09, $01, $9D
.byte $3E, $01, $60, $20, $B5, $C4, $F0, $0C, $AA, $CA, $BD, $3E, $01, $29, $80, $09
.byte $02, $9D, $3E, $01, $60, $B9, $41, $01, $10, $07, $29, $30, $4A, $4A, $4A, $4A
.byte $60, $29, $03, $60, $01, $02, $04, $FE, $FD, $FB, $0F, $17, $1F, $10, $03, $4C
.byte $67, $C6, $20, $29, $C5, $BD, $00, $07, $85, $01, $BD, $03, $07, $85, $02, $E0
.byte $20, $D0, $0B, $BD, $02, $07, $10, $06, $A5, $03, $09, $20, $85, $03, $C8, $8A
.byte $48, $98, $48, $A5, $00, $0A, $A8, $B9, $31, $C7, $85, $04, $B9, $32, $C7, $85

; c500
.byte $05, $68, $A8, $A5, $01, $18, $65, $04, $9D, $00, $02, $E8, $B1, $06, $9D, $00
.byte $02, $C8, $E8, $A5, $03, $9D, $00, $02, $E8, $A5, $02, $18, $65, $05, $9D, $00
.byte $02, $E8, $C6, $00, $10, $CB, $68, $AA, $60, $48, $4A, $4A, $4A, $4A, $0A, $A8
.byte $B9, $42, $7F, $85, $06, $B9, $43, $7F, $85, $07, $B9, $21, $C7, $85, $00, $B9
.byte $22, $C7, $C9, $F0, $B0, $15, $85, $03, $68, $48, $4A, $90, $06, $A5, $03, $09
.byte $40, $85, $03, $68, $29, $0F, $0A, $0A, $A8, $88, $60, $68, $29, $0F, $0A, $0A
.byte $0A, $A8, $B1, $06, $85, $03, $60, $00, $00, $01, $10, $11, $20, $21, $00, $40
.byte $01, $00, $11, $10, $21, $20, $00, $00, $00, $01, $10, $11, $22, $23, $00, $40
.byte $01, $00, $11, $10, $23, $22, $00, $00, $00, $01, $10, $11, $24, $25, $00, $40
.byte $01, $00, $11, $10, $25, $24, $00, $00, $00, $01, $10, $11, $28, $29, $00, $40
.byte $01, $00, $11, $10, $29, $28, $00, $00, $00, $01, $14, $15, $40, $41, $00, $40
.byte $01, $00, $15, $14, $41, $40, $00, $00, $00, $01, $14, $0B, $40, $41, $00, $40
.byte $01, $00, $0B, $14, $41, $40, $00, $00, $0C, $0D, $1C, $1D, $2C, $2D, $00, $40
.byte $0D, $0C, $1D, $1C, $2D, $2C, $00, $00, $00, $01, $14, $15, $24, $25, $00, $40
.byte $01, $00, $15, $14, $25, $24, $00, $00, $00, $01, $18, $19, $20, $21, $00, $40
.byte $01, $00, $19, $18, $21, $20, $00, $00, $00, $01, $18, $19, $22, $23, $00, $40

; c600
.byte $01, $00, $19, $18, $23, $22, $00, $00, $00, $01, $10, $11, $24, $25, $00, $40
.byte $01, $00, $11, $10, $25, $24, $00, $00, $00, $01, $18, $19, $28, $29, $00, $40
.byte $01, $00, $19, $18, $29, $28, $00, $00, $00, $01, $1A, $1B, $40, $41, $00, $40
.byte $01, $00, $1B, $1A, $41, $40, $00, $00, $00, $01, $1A, $2B, $40, $41, $00, $40
.byte $01, $00, $2B, $1A, $41, $40, $00, $00, $0C, $0F, $1C, $1F, $2C, $2D, $00, $40
.byte $0F, $0C, $1F, $1C, $2D, $2C, $00, $00, $00, $01, $1A, $1B, $24, $25, $00, $40
.byte $01, $00, $1B, $1A, $25, $24, $00, $29, $7F, $20, $B2, $C6, $0A, $0A, $0A, $0A
.byte $A8, $A9, $03, $85, $00, $BD, $00, $07, $85, $01, $BD, $03, $07, $85, $02, $8A
.byte $48, $B1, $03, $C9, $7F, $D0, $04, $A9, $F8, $D0, $03, $18, $65, $01, $9D, $00
.byte $02, $C8, $E8, $B1, $03, $9D, $00, $02, $C8, $E8, $B1, $03, $9D, $00, $02, $C8
.byte $E8, $B1, $03, $18, $65, $02, $9D, $00, $02, $E8, $C8, $C6, $00, $10, $D2, $68
.byte $AA, $60, $48, $4A, $4A, $4A, $4A, $0A, $A8, $B9, $52, $7F, $85, $03, $B9, $53
.byte $7F, $85, $04, $68, $60, $A8, $A9, $05, $85, $00, $BD, $00, $07, $85, $01, $BD
.byte $03, $07, $85, $02, $BD, $02, $07, $85, $03, $8A, $48, $B9, $3D, $C7, $C9, $7F
.byte $D0, $04, $A9, $F8, $D0, $03, $18, $65, $01, $9D, $00, $02, $C8, $E8, $B9, $3D
.byte $C7, $9D, $00, $02, $C8, $E8, $20, $0D, $C7, $C8, $E8, $B9, $3D, $C7, $18, $65

; c700
.byte $02, $9D, $00, $02, $E8, $C8, $C6, $00, $10, $D1, $68, $AA, $60, $A5, $03, $10
.byte $09, $B9, $3D, $C7, $09, $20, $9D, $00, $02, $60, $B9, $3D, $C7, $9D, $00, $02
.byte $60, $05, $FF, $05, $FF, $05, $FF, $03, $01, $03, $02, $03, $03, $03, $00, $05
.byte $FF, $FF, $04, $FF, $FC, $F7, $04, $F7, $FC, $EF, $04, $EF, $FC, $7F, $5F, $00
.byte $00, $7F, $5F, $00, $00, $F8, $04, $00, $FC, $F8, $04, $40, $03, $00, $05, $00
.byte $FC, $00, $05, $40, $03, $F0, $06, $00, $FC, $F0, $06, $40, $03, $F8, $07, $00
.byte $FC, $F8, $07, $40, $03, $00, $08, $00, $FC, $00, $08, $40, $03, $BD, $03, $07
.byte $C5, $08, $B0, $0E, $BD, $02, $07, $85, $00, $20, $AD, $C7, $A5, $00, $9D, $02
.byte $07, $60, $BD, $02, $07, $29, $F0, $09, $0A, $9D, $02, $07, $60, $BD, $03, $07
.byte $C5, $08, $90, $0E, $BD, $02, $07, $85, $00, $20, $AD, $C7, $A5, $00, $9D, $02
.byte $07, $60, $BD, $02, $07, $29, $F0, $09, $05, $9D, $02, $07, $60, $A5, $00, $29
.byte $F0, $30, $11, $BD, $00, $07, $C5, $0A, $B0, $01, $60, $A5, $00, $29, $0F, $09
.byte $B0, $85, $00, $60, $BD, $00, $07, $C5, $09, $90, $01, $60, $A5, $00, $29, $0F
.byte $09, $40, $85, $00, $60, $BD, $00, $07, $9D, $00, $02, $38, $E9, $08, $9D, $04
.byte $02, $BD, $03, $07, $9D, $03, $02, $A8, $A5, $14, $29, $0C, $F0, $1A, $4A, $4A
.byte $85, $00, $BD, $02, $07, $29, $0F, $C9, $08, $B0, $08, $98, $18, $65, $00, $A8

; c800
.byte $4C, $08, $C8, $98, $38, $E5, $00, $A8, $98, $9D, $07, $02, $A9, $02, $9D, $02
.byte $02, $9D, $06, $02, $A0, $8C, $A5, $14, $29, $08, $D0, $02, $A0, $8D, $98, $9D
.byte $01, $02, $38, $E9, $02, $9D, $05, $02, $BD, $02, $07, $29, $0F, $C9, $08, $B0
.byte $0B, $BD, $02, $02, $09, $40, $9D, $02, $02, $9D, $06, $02, $60


  JSR $EF39                
  JSR $7F06              
  JMP $EBC9                


@nes_c846:
  LDA $B6                  
  PHA                      
  LDA #$04                 
  JSR $C17F    
  ; Audio, go to our special loc            
  JSR $A000 ; new_sound_engine_hijack                
  PLA                      
  JSR $C17F                
  RTS                      

; 0xC856
  LDA $B6                  
  PHA                      
  LDA #$04                 
  JSR @switch_bank                
  JSR a003_sound_engine_hijack               
  PLA                      
  JSR @switch_bank                
  RTS                      

; 0xC866 this is the NES NMI
  JMP @nes_nmi_replacement
  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
  .byte $00, $00, $00, $00, $00, $00, $00, $00


; should be c8a1
@password_generation:
  JSR @zero_out_password_area
  JSR $C98A
  JSR $C975
  JSR $C8C6
  JSR $C92B
  RTS


@zero_out_password_area:
  LDX #$2F
  LDA #$00
: STA $6031,X
  DEX
  BPL :-
  LDX #$11
  LDA #$00
: STA $6061,X
  DEX
  BPL :-
  RTS

; pwcall 3 c8c6
  LDA #$00
  TAY
: LDA $6061,Y
  JSR $C912
  JSR $C909
  JSR $C922
  INY
  CPY #$12
  BCS :+
  LDA $6061,Y
  JSR $C91A
  JSR $C909
  JSR $C91A
  INY
  CPY #$12
  BCS :+
  LDA $6061,Y
  JSR $C922
  JSR $C909
  JSR $C912
  JSR $C909
  INY
  CPY #$12
  BCC :-
: RTS


; c900 - c92a - password utility functions
  LDX #$17
: ROR $6031,X
  DEX
  BPL :-
  RTS

  CLC
  JSR $C900
  CLC
  JSR $C900
  RTS

  LSR
  JSR $C900
  LSR
  JSR $C900
  LSR
  JSR $C900
  LSR
  JSR $C900
  LSR
  JSR $C900
  LSR
  JSR $C900
  RTS

.byte $AD, $02, $20, $A9, $22
.byte $A0, $89, $A2, $00, $20, $59, $C9, $20, $60, $C9, $A9, $22, $A0, $91, $20, $59
.byte $C9, $20, $60, $C9, $A9, $22, $A0, $C9, $20, $59, $C9, $20, $60, $C9, $A9, $22
.byte $A0, $D1, $20, $59, $C9, $20, $60, $C9, $60

; c959
  STA VMADDH ;  PpuAddr_2006         
  STY VMADDL ; PpuAddr_2006         
  RTS                      
; c960
  LDY #$05                 
: TYA                      
  PHA                      
  LDA $6031,X              
  TAY                      
  LDA $CA50,Y              
  STA VMDATAL ; PpuData_2007         
  PLA                      
  TAY                      
  INX                      
  DEY                      
  BPL :-               
  RTS                      
;c975
; pwcall 2
  LDX #$00
  STX $00
: LDA $00
  CLC
  ADC $6061,X
  STA $00
  INX
  CPX #$11
  BCC :-
  STA $6061,X
  RTS


; pwcall 1
  LDY #$02
: LDA $600D,Y
  AND #$F3
  STA $00
  LDA $6010,Y
  AND #$03
  ASL
  ASL
  ORA $00
  STA $6061,Y
  DEY
  BPL :-
  LDA $6013
  STA $6064
  LDA $6014
  STA $6065
  LDA $6015
  STA $6066
  LDA $6019
  STA $6067
  LDA $601A
  AND #$0F
  STA $00
  LDA $601B
  STA $6069
  LDA $601C
  AND #$0F
  ASL
  ASL
  ASL
  ASL
  ORA $00
  STA $6068
  LDA $26
  AND #$FE
  STA $00
  LDA $601D
  AND #$01
  ORA $00
  STA $606A
  LDA $601E
  STA $606B
  LDA $601F
  STA $606C
  LDA $6020
  STA $606D
  LDA $6021
  ASL
  ASL
  ASL
  ASL
  STA $00
  LDA $6026
  AND #$0F
  ORA $00
  STA $606E
  LDA $6022
  AND #$03
  STA $00
  LDA $6023
  AND #$03
  ASL
  ASL
  ORA $00
  STA $00
  LDA $6024
  AND #$03
  ASL
  ASL
  ASL
  ASL
  ORA $00
  STA $606F
  LDA $6025
  STA $6070
  LDA $6028
  ASL
  ASL
  ASL
  ASL
  STA $00
  LDA $6029
  AND #$07
  ORA $00
  STA $00
  LDA $602A
  ASL
  ASL
  ASL
  AND #$08
  ORA $00
  STA $6071
  RTS

;ca50
.byte $00, $01, $02, $03, $04, $05, $06, $07, $08, $09, $16, $17, $18, $19, $1A, $1B
.byte $1C, $1D, $1E, $1F, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $2A, $2B
.byte $2C, $2D, $2E, $2F, $30, $31, $32, $33, $34, $35, $36, $37, $38, $39, $3A, $3B

.byte $3C, $3D, $3E, $3F, $40, $41, $42, $43, $44, $45, $46, $47, $48, $49, $0A, $0E
; ca90
@ca90:
  JMP @ca90_replacement
  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
  .byte $00, $00, $00, $00, $00, $00, $00

@cac7:
  PHA                      
  JSL just_disable_nmi        
  .byte $ea, $ea, $ea

  PLA                      
  STA $B8                  
  PLA                      
  STA $B6                  
  INC A
  AND #$0F
  ORA #$A0
  STA $0802
  PHA
  PLB
  LDA #.lobyte(:+)
  STA $0800
  LDA #.hibyte(:+)
  STA $0801
  JML ($0800)
: LDA $B8                
  PHA                      
  ; LDA PpuStatus_2002  
  JSL load_nmitimen_from_state     
  NOP
  NOP
     
  PLA                      
  RTS                      


; CAF7 - CB48
  PHA         
  ; turn off NMI        
  JSL just_disable_nmi        
  .byte $ea, $ea, $ea ; AND #$7F                 

  PLA                      
  STA $B8                  
  PLA                      
  STA $C1                  
  PLA                      
  STA $C2                  
  PLA                      
  STA $C3                  
  PLA                      
  STA $C4

  LDA $C2                  
  PHA                      
  LDA $C1                  
  PHA                      
  LDA #$06                 
  PHA                      
  LDA #$CA                 
  PHA                      
  LDA #$C6                 
  PHA                      
  LDA $C4                  
  PHA                      
  LDA $C3                  
  PHA                      
  LDA $BE  
  STA $B6     

  INC A
  AND #$0F
  ORA #$A0
  STA $0802
  PHA
  PLB
  LDA #.lobyte(:+)
  STA $0800
  LDA #.hibyte(:+)
  STA $0801
  JML ($0800)

  ; STA $FFFF                
  ; LSR A                    
  ; STA $FFFF                
  ; LSR A                    
  ; STA $FFFF                
  ; LSR A                    
  ; STA $FFFF                
  ; LSR A                    
  ; STA $FFFF    

: LDA $B8      
  PHA                      
  ; LDA $2002 ; PpuStatus_2002   
  JSL load_nmitimen_from_state      
  .byte $ea, $ea    

  PLA                      
  RTS    

  LDA $BE
  JMP $C17F

; cb49 - load info for room switch
  JMP @nes_cb49_replacement
  .byte $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea
  .byte $ea, $ea, $ea, $ea
  ; LDA $BE
  ; JSR $C17F
  ; JSR $007F33
  ; JSR $007F36
  ; JSR $007F39
  ; JSR $007F3C
  ; LDA #$06
  ; JMP $C17F
@fixedCB64:
  LDA #$02
  BNE :+
  LDA #$04
  BNE :+
  LDA #$08
  BNE :+
  LDA $3A
  BEQ @fixedCB93
  CMP #$10
  BCC @fixedCBA6
  LDY $012F
  LDA $46
  CMP $CB90,Y
  BEQ @fixedCB8C
  CMP #$1B
  BNE :++
  LDA #$40
: STA $0385
: RTS

; cb8c
@fixedCB8C:
  LDA #$20
  BNE :--
@fixedCB90:
  .byte $37, $2E, $07
@fixedCB93:
  LDA $012F
  CMP #$01
  BEQ @fixedCB64
  CMP #$02
  BEQ @fixedCB64 + 4
  CMP #$03
  BEQ @fixedCB64 + 8
  LDA #$01
  BNE :--
@fixedCBA6:
  LDY $3B
  CPY #$22
  BEQ @fixedCB8C
  CPY #$23
  BEQ @fixedCB8C
  LDA #$01
  STA $0380
  RTS

.byte $20, $09, $7F, $A2, $20, $BD, $01, $07, $10, $7A
.byte $29, $70, $F0, $03, $4C, $54, $CC, $BD, $00, $07, $C9, $E8, $90, $03, $4C, $7B
.byte $CC, $C9, $10, $B0, $05, $A9, $10, $9D, $00, $07, $20, $B8, $DF, $20, $AB, $E0
.byte $20, $B3, $CC, $BD, $01, $07, $29, $0F, $20, $2B, $EE, $F9, $CC, $F9, $CC, $F9
.byte $CC, $F9, $CC, $5B, $CD, $5B, $CD, $5B, $CD, $5B, $CD, $3E, $CD, $3E, $CD, $3E

; cc00
.byte $CD, $3E, $CD, $55, $CD, $55, $CD, $55, $CD, $55, $CD, $4C, $1D, $E1, $4C, $2D
.byte $E1, $4C, $35, $E1, $4C, $55, $E1, $A9, $04, $85, $37, $A9, $07, $20, $CD, $C4
.byte $FE, $04, $07, $BD, $04, $07, $C9, $10, $60, $20, $17, $CC, $90, $DD, $C9, $20
.byte $90, $DC, $C9, $30, $90, $DB, $A9, $80, $85, $AB, $60, $20, $17, $CC, $90, $CE
.byte $C9, $20, $90, $C7, $C9, $30, $90, $CC, $A9, $80, $9D, $01, $07, $0A, $9D, $04
.byte $07, $85, $37, $60, $C9, $10, $F0, $E3, $C9, $20, $F0, $CD, $BD, $05, $07, $D0
.byte $4A, $BD, $00, $07, $C9, $F8, $B0, $13, $BD, $02, $07, $29, $7F, $9D, $02, $07
.byte $FE, $00, $07, $FE, $00, $07, $A9, $18, $4C, $C5, $C6, $CE, $50, $01, $10, $13
.byte $A9, $00, $9D, $01, $07, $20, $2B, $DD, $9D, $10, $02, $9D, $14, $02, $A9, $40
.byte $85, $AB, $60, $A5, $A5, $09, $08, $85, $A5, $A9, $FF, $85, $A7, $A9, $C0, $85
.byte $1D, $BD, $00, $07, $38, $E9, $04, $9D, $00, $07, $60, $DE, $05, $07, $A9, $18
.byte $4C, $C5, $C6, $A5, $A5, $29, $0F, $85, $00, $BD, $01, $07, $29, $F0, $05, $00
.byte $9D, $01, $07, $60, $A5, $A7, $C9, $40, $B0, $08, $C9, $20, $B0, $05, $C9, $01
.byte $B0, $1F, $60, $A5, $14, $29, $08, $D0, $F9, $A0, $05, $8A, $48, $BD, $02, $02
.byte $29, $FC, $09, $01, $9D, $02, $02, $E8, $E8, $E8, $E8, $88, $10, $EF, $68, $AA
.byte $60, $A5, $14, $29, $02, $D0, $DB, $F0, $E0, $20, $48, $CF, $20, $A9, $CF, $20

; cd00
.byte $24, $CD, $4C, $0C, $7F, $A5, $A5, $29, $04, $D0, $13, $BD, $01, $07, $29, $40
.byte $D0, $09, $20, $B8, $DF, $20, $48, $CF, $4C, $A9, $CF, $4C, $5C, $CC, $20, $0B
.byte $CD, $4C, $62, $CD, $AD, $D5, $04, $A8, $29, $F0, $C9, $20, $F0, $0B, $AD, $D6
.byte $04, $A8, $29, $F0, $C9, $20, $F0, $01, $60, $A9, $04, $4C, $90, $CA, $C6, $A7
.byte $F0, $0C, $20, $48, $CF, $20, $72, $CD, $20, $0C, $7F, $4C, $C4, $CC, $A5, $A5
.byte $29, $F7, $85, $A5, $60, $20, $3E, $CD, $4C, $62, $CD, $A5, $A5, $30, $0B, $20
.byte $F9, $CC, $8A, $48, $20, $B7, $D8, $68, $AA, $60, $8A, $48, $20, $87, $D8, $68
.byte $AA, $60, $20, $8F, $CD, $20, $C8, $CE, $A5, $14, $29, $1F, $D0, $05, $A9, $04
.byte $8D, $80, $03, $BD, $00, $07, $C9, $D0, $90, $04, $A9, $D0, $85, $1D, $60, $EA
.byte $EA, $EA, $20, $41, $CE, $20, $6E, $CE, $20, $9E, $CD, $4C, $D3, $CD, $A5, $16
.byte $4A, $B0, $14, $4A, $B0, $1C, $A5, $1C, $F0, $0C, $C9, $FF, $F0, $08, $A5, $1C
.byte $30, $0D, $10, $16, $C6, $1C, $60, $A5, $1C, $30, $04, $C9, $08, $B0, $02, $E6
.byte $1C, $60, $A5, $1C, $10, $04, $C9, $F8, $90, $F7, $C6, $1C, $60, $A5, $14, $4A
.byte $B0, $11, $60, $A5, $1C, $F0, $28, $C9, $FF, $F0, $24, $C9, $08, $90, $EE, $C9
.byte $F8, $B0, $EA, $A5, $1C, $30, $19, $AD, $2F, $01, $C9, $03, $F0, $0E, $AD, $D5
.byte $04, $C9, $50, $B0, $0A, $AD, $D7, $04, $C9, $50, $B0, $03, $FE, $03, $07, $60

; ce00
.byte $BD, $03, $07, $C9, $08, $90, $F8, $AD, $2F, $01, $C9, $03, $F0, $19, $AD, $D6
.byte $04, $C9, $50, $B0, $EA, $AD, $D8, $04, $C9, $50, $B0, $E3, $AD, $2F, $01, $29
.byte $01, $D0, $04, $DE, $03, $07, $60, $BD, $03, $07, $C9, $06, $B0, $F5, $60, $A5
.byte $16, $4A, $4A, $4A, $B0, $17, $4A, $B0, $1F, $A5, $14, $29, $10, $D0, $0E, $F0
.byte $17, $AD, $2F, $01, $C9, $03, $F0, $E7, $A5, $16, $0A, $B0, $0B, $A5, $1D, $30
.byte $04, $C9, $08, $B0, $02, $E6, $1D, $60, $A5, $1D, $10, $04, $C9, $F8, $90, $F7
.byte $C6, $1D, $60, $A9, $00, $85, $1D, $60, $A5, $14, $4A, $B0, $11, $60, $A5, $1D
.byte $F0, $2B, $C9, $FF, $F0, $27, $C9, $08, $90, $EE, $C9, $F8, $B0, $EA, $A5, $1D
.byte $30, $1C, $AD, $2F, $01, $C9, $03, $F0, $11, $20, $87, $D2, $AD, $D3, $04, $C9
.byte $40, $B0, $0A, $AD, $D4, $04, $C9, $40, $B0, $03, $FE, $00, $07, $60, $AD, $2F
.byte $01, $C9, $03, $F0, $07, $AD, $D9, $04, $C9, $50, $B0, $04, $DE, $00, $07, $60
.byte $A9, $10, $85, $1D, $BD, $00, $07, $18, $69, $04, $9D, $00, $07, $60, $A5, $14
.byte $29, $08, $D0, $1D, $A0, $0A, $D0, $19, $AD, $2F, $01, $C9, $03, $F0, $1E, $A0
.byte $08, $A5, $1D, $10, $0C, $C9, $F0, $B0, $E5, $A5, $14, $29, $10, $D0, $02, $A0
.byte $0A, $A5, $1C, $30, $01, $C8, $98, $20, $F0, $D2, $4C, $EF, $CF, $A9, $00, $A4
.byte $1C, $30, $02, $A9, $01, $20, $8C, $D3, $A0, $28, $A5, $1D, $10, $17, $C9, $F0

; cf00
.byte $90, $0B, $A5, $14, $29, $08, $D0, $0D, $A0, $2A, $4C, $15, $CF, $A5, $14, $29
.byte $10, $D0, $02, $A0, $2A, $A5, $1C, $30, $01, $C8, $98, $20, $CD, $C4, $A5, $1C
.byte $10, $13, $BD, $10, $02, $38, $E9, $10, $9D, $10, $02, $BD, $13, $02, $18, $69
.byte $10, $9D, $13, $02, $60, $BD, $14, $02, $38, $E9, $10, $9D, $14, $02, $BD, $17
.byte $02, $38, $E9, $10, $9D, $17, $02, $60, $A5, $1F, $D0, $0B, $A5, $18, $0A, $0A
.byte $90, $13, $A9, $10, $85, $1F, $60, $AD, $2F, $01, $C9, $03, $D0, $05, $A5, $14
.byte $4A, $90, $02, $C6, $1F, $60, $AD, $D5, $04, $29, $F8, $C9, $38, $F0, $05, $C9
.byte $30, $F0, $1E, $60, $A5, $14, $29, $1F, $D0, $F9, $A5, $AA, $18, $69, $01, $0A
.byte $0A, $0A, $38, $E9, $01, $C5, $A6, $90, $EA, $E6, $A6, $A9, $01, $8D, $81, $03
.byte $60, $A5, $14, $29, $1F, $D0, $DC, $8A, $A8, $A9, $7F, $9D, $08, $07, $A9, $80
.byte $8D, $81, $03, $C6, $A6, $4C, $69, $DA, $60, $20, $A8, $CF, $20, $66, $CF, $24
.byte $1E, $30, $11, $70, $2F, $20, $E5, $D1, $20, $06, $D1, $20, $CA, $D2, $20, $E0
.byte $D2, $4C, $69, $D1, $20, $39, $D2, $A0, $08, $A5, $1D, $30, $02, $A0, $0E, $A5
.byte $1C, $30, $01, $C8, $98, $20, $E0, $D2, $20, $EF, $CF, $20, $5B, $D1, $20, $0C
.byte $D0, $4C, $9E, $D2, $20, $39, $D2, $A9, $00, $20, $C5, $C6, $4C, $DB, $CF, $A9
.byte $02, $24, $1C, $10, $02, $A9, $FE, $85, $00, $BD, $03, $02, $18, $65, $00, $9D

@fixed_d000:
.byte $03, $02, $BD, $07, $02, $18, $65, $00, $9D, $07, $02, $60, $20, $0F, $7F, $A5
.byte $1C, $C9, $FE, $B0, $1B, $C9, $02, $90, $17, $C9, $F8, $B0, $17, $C9, $08, $90
.byte $06, $C9, $80, $B0, $0C, $90, $06, $A5, $14, $29, $01, $D0, $03, $20, $85, $D1
.byte $60, $4C, $B9, $D1, $A5, $14, $29, $01, $D0, $F6, $F0, $F5, $A9, $FF, $D0, $10
.byte $A9, $FF, $D0, $02, $A9, $00, $85, $1C, $DE, $03, $07, $68, $68, $60, $A9, $00
.byte $85, $1C, $FE, $03, $07, $68, $68, $60, $A9, $4F, $CD, $D5, $04, $90, $24, $CD
.byte $D6, $04, $90, $23, $A9, $70, $CD, $D5, $04, $B0, $17, $CD, $D6, $04, $B0, $12
.byte $A5, $16, $29, $04, $D0, $0C, $A9, $4F, $CD, $D7, $04, $90, $06, $CD, $D8, $04
.byte $90, $05, $60, $DE, $03, $07, $60, $FE, $03, $07, $60, $A5, $16, $4A, $B0, $2D
.byte $4A, $B0, $46, $A5, $1C, $F0, $14, $C9, $FF, $F0, $1C, $C9, $30, $90, $0A, $C9
.byte $D0, $B0, $12, $A5, $1C, $30, $1E, $10, $38, $C6, $1C, $68, $68, $A9, $07, $20
.byte $E0, $D2, $4C, $64, $D1, $E6, $1C, $68, $68, $A9, $06, $D0, $F2, $A5, $1C, $30
.byte $07, $C9, $40, $B0, $02, $E6, $1C, $60, $68, $68, $E6, $1C, $E6, $1C, $20, $CA
.byte $D2, $49, $01, $20, $E0, $D2, $4C, $64, $D1, $A5, $1C, $10, $07, $C9, $C0, $90
.byte $E6, $C6, $1C, $60, $68, $68, $C6, $1C, $C6, $1C, $4C, $CE, $D0, $A5, $1C, $C9
.byte $08, $90, $06, $30, $05, $A9, $08, $85, $1C, $60, $C9, $F8, $B0, $FB, $A9, $F8
.byte $85, $1C, $60, $4C, $8B, $D0, $AD, $D3, $04, $29, $F8, $C9, $48, $F0, $F4, $AD
.byte $D4, $04, $29, $F8, $C9, $48, $F0, $EB, $20, $ED, $D0, $A5, $16, $4A, $B0, $25
.byte $4A, $B0, $2D, $A5, $1C, $F0, $18, $C9, $FF, $F0, $17, $C9, $02, $90, $0A, $C9
.byte $FE, $B0, $09, $A5, $1C, $30, $16, $10, $1F, $4C, $A9, $D0, $4C, $B5, $D0, $4C
.byte $AB, $D0, $4C, $B7, $D0, $A5, $1C, $30, $04, $C9, $08, $B0, $02, $E6, $1C, $60
.byte $A5, $1C, $10, $04, $C9, $F8, $90, $F7, $C6, $1C, $60, $A5, $16, $4A, $B0, $E5
.byte $4A, $B0, $ED, $60, $A5, $14, $4A, $B0, $18, $20, $58, $D0, $A5, $16, $29, $08
.byte $D0, $0F, $A5, $1C, $F0, $0B, $C9, $FF, $F0, $07, $A5, $1C, $30, $04, $20, $85
.byte $D1, $60, $4C, $B9, $D1, $AD, $D5, $04, $C9, $50, $B0, $25, $AD, $D7, $04, $C9
.byte $70, $B0, $04, $C9, $50, $B0, $1B, $FE, $03, $07, $A5, $3A, $F0, $13, $C9, $10
.byte $B0, $0F, $A5, $1E, $D0, $0B, $A5, $14, $29, $0F, $D0, $05, $A9, $08, $8D, $80
.byte $03, $60, $A5, $16, $29, $04, $D0, $DF, $60, $AD, $D6, $04, $C9, $50, $B0, $F1
.byte $AD, $D8, $04, $C9, $70, $B0, $11, $C9, $50, $B0, $13, $AD, $2F, $01, $4A, $90
.byte $07, $BD, $03, $07, $C9, $06, $90, $D9, $DE, $03, $07, $4C, $9A, $D1, $A5, $16
.byte $29, $04, $D0, $F4, $60, $A5, $16, $4A, $4A, $4A, $B0, $2D, $4A, $B0, $20, $AD
.byte $D3, $04, $C9, $40, $B0, $07, $AD, $D4, $04, $C9, $40, $90, $13, $A5, $18, $0A
.byte $90, $0D, $A9, $E5, $85, $1D, $A9, $80, $85, $1E, $A9, $02, $8D, $81, $03, $60
.byte $A9, $00, $85, $1D, $A9, $80, $85, $1E, $60, $AD, $D3, $04, $C9, $50, $B0, $EF
.byte $AD, $D4, $04, $C9, $50, $B0, $E8, $BD, $00, $07, $18, $69, $04, $9D, $00, $07
.byte $A9, $00, $85, $1D, $A9, $40, $85, $1E, $60, $A5, $1D, $10, $2F, $BD, $00, $07
.byte $C9, $0C, $90, $23, $AD, $D9, $04, $C9, $70, $B0, $0F, $C9, $50, $B0, $18, $A5
.byte $16, $29, $80, $D0, $02, $E6, $1D, $E6, $1D, $60, $BD, $00, $07, $18, $69, $08
.byte $18, $65, $FD, $29, $0C, $D0, $E8, $A9, $00, $85, $1D, $60, $AD, $D3, $04, $C9
.byte $FF, $F0, $24, $C9, $40, $B0, $1B, $AD, $D4, $04, $C9, $40, $B0, $14, $A5, $1D
.byte $C9, $60, $B0, $02, $E6, $1D, $60, $BD, $00, $07, $18, $65, $FD, $29, $0C, $C9
.byte $08, $60, $20, $87, $D2, $D0, $E7, $A9, $00, $85, $1E, $85, $1D, $60, $A5, $1D
.byte $10, $12, $C9, $F8, $B0, $0A, $C9, $F0, $B0, $03, $DE, $00, $07, $DE, $00, $07
.byte $DE, $00, $07, $60, $C9, $08, $90, $11, $C9, $10, $90, $0A, $C9, $18, $90, $03
.byte $FE, $00, $07, $FE, $00, $07, $FE, $00, $07, $60, $A5, $14, $4A, $4A, $29, $03
.byte $A8, $B9, $DC, $D2, $A8, $24, $1C, $30, $01, $C8, $98, $60, $00, $02, $04, $02
.byte $48, $A5, $16, $4A, $4A, $4A, $B0, $50, $4A, $90, $06, $68, $29, $01, $09, $0C
.byte $48, $A5, $1F, $D0, $37, $68, $48, $20, $CD, $C4, $68, $C9, $02, $F0, $05, $C9
.byte $03, $F0, $15, $60, $8A, $48, $A0, $03, $FE, $00, $02, $DE, $03, $02, $E8, $E8
.byte $E8, $E8, $88, $10, $F3, $68, $AA, $60, $8A, $48, $A0, $03, $FE, $00, $02, $FE
.byte $03, $02, $E8, $E8, $E8, $E8, $88, $10, $F3, $68, $AA, $60, $68, $48, $20, $5A
.byte $D3, $68, $09, $10, $20, $CD, $C4, $60, $68, $A9, $00, $20, $C5, $C6, $A9, $00
.byte $85, $1F, $60, $A2, $38, $20, $4A, $D3, $A2, $3C, $A9, $F8, $9D, $00, $07, $A9
.byte $00, $9D, $01, $07, $60, $A5, $A5, $29, $07, $60, $48, $20, $8C, $D3, $20, $55
.byte $D3, $20, $2B, $EE, $A1, $D3, $E1, $D3, $A1, $D3, $E1, $D3, $A1, $D3, $E1, $D3
.byte $A1, $D3, $E1, $D3, $A0, $38, $68, $29, $0F, $C9, $0E, $B0, $04, $C9, $0C, $B0
.byte $0A, $A9, $10, $99, $02, $07, $A9, $40, $8D, $81, $03, $60, $48, $A5, $1F, $C9
.byte $10, $D0, $0E, $A5, $3C, $D0, $DD, $AD, $39, $07, $10, $07, $AD, $3D, $07, $10
.byte $16, $68, $60, $A0, $38, $68, $20, $12, $D4, $20, $CF, $D3, $99, $02, $07, $20
.byte $BC, $D3, $A9, $00, $4C, $37, $E3, $A0, $3C, $4C, $A5, $D3, $AD, $2F, $01, $C9
.byte $03, $F0, $06, $A9, $10, $8D, $80, $03, $60, $A9, $02, $8D, $80, $03, $60, $A5
.byte $3A, $C9, $10, $B0, $09, $A5, $A5, $29, $02, $F0, $03, $A9, $7F, $60, $A9, $10
.byte $60, $A5, $1F, $C9, $10, $D0, $0A, $AD, $41, $07, $10, $07, $AD, $45, $07, $10
.byte $0B, $68, $60, $A0, $40, $68, $48, $20, $4A, $D4, $68, $60, $A0, $44, $68, $48
.byte $20, $4A, $D4, $A0, $3C, $68, $48, $20, $12, $D4, $20, $CF, $D3, $99, $02, $07
.byte $68, $60, $29, $0F, $C9, $0E, $B0, $04, $C9, $0C, $B0, $19, $29, $01, $D0, $04
.byte $A9, $8C, $D0, $13, $A9, $84, $99, $01, $07, $BD, $03, $07, $18, $69, $04, $99
.byte $03, $07, $4C, $40, $D4, $A9, $80, $99, $01, $07, $BD, $03, $07, $99, $03, $07
.byte $BD, $00, $07, $38, $E9, $08, $99, $00, $07, $60, $29, $0F, $C9, $0E, $B0, $04
.byte $C9, $0C, $B0, $2F, $29, $01, $D0, $1D, $A9, $8C, $99, $01, $07, $BD, $03, $07
.byte $38, $E9, $08, $99, $03, $07, $BD, $00, $07, $38, $E9, $08, $99, $00, $07, $A9
.byte $00, $99, $02, $07, $60, $A9, $84, $99, $01, $07, $BD, $03, $07, $99, $03, $07
.byte $4C, $66, $D4, $A9, $80, $99, $01, $07, $BD, $03, $07, $99, $03, $07, $BD, $00
.byte $07, $38, $E9, $18, $99, $00, $07, $A9, $40, $99, $02, $07, $60, $20, $A1, $D4
.byte $68, $60, $AD, $2F, $01, $C9, $03, $F0, $48, $20, $60, $D6, $20, $55, $D3, $20
.byte $2B, $EE, $D2, $D4, $C2, $D4, $D2, $D4, $C2, $D4, $C8, $D4, $20, $D7, $C8, $D4
.byte $20, $D7, $20, $20, $D7, $4C, $DC, $D4, $A2, $40, $20, $E3, $D4, $A2, $44, $4C
.byte $E3, $D4, $A2, $40, $20, $E3, $D4, $A2, $44, $20, $E3, $D4, $A2, $48, $20, $E3
.byte $D4, $A2, $4C, $A9, $00, $9D, $01, $07, $A9, $F8, $9D, $00, $02, $9D, $00, $07
.byte $60, $20, $60, $D6, $A2, $38, $20, $01, $D5, $A2, $3C, $20, $01, $D5, $4C, $3C
.byte $D5, $BD, $01, $07, $10, $30, $BD, $00, $02, $9D, $08, $02, $A9, $7F, $9D, $09
.byte $02, $A9, $01, $9D, $0A, $02, $A9, $7F, $9D, $01, $02, $BD, $01, $07, $29, $08
.byte $F0, $0A, $BD, $03, $02, $18, $69, $08, $9D, $0B, $02, $60, $BD, $03, $02, $38
.byte $E9, $08, $9D, $0B, $02, $60, $A9, $F0, $9D, $08, $02, $60, $A5, $1F, $D0, $4F
.byte $8A, $48, $98, $48, $A2, $20, $A0, $00, $A5, $1C, $10, $07, $A9, $F8, $9D, $08
.byte $02, $D0, $07, $A9, $F8, $9D, $0C, $02, $A0, $08, $A9, $02, $85, $00, $AD, $20
.byte $07, $18, $79, $9E, $D5, $9D, $28, $02, $B9, $9F, $D5, $9D, $29, $02, $B9, $A0
.byte $D5, $9D, $2A, $02, $AD, $23, $07, $18, $79, $A1, $D5, $9D, $2B, $02, $C8, $C8
.byte $C8, $C8, $E8, $E8, $E8, $E8, $C6, $00, $D0, $D4, $68, $A8, $68, $AA, $60, $8A
.byte $48, $A2, $20, $A9, $F8, $9D, $28, $02, $9D, $2C, $02, $68, $AA, $60, $F8, $9D
.byte $01, $FC, $00, $9E, $01, $FC, $F8, $9D, $41, $04, $00, $9E, $41, $04, $20, $20
.byte $D7, $4C, $40, $D9, $BD, $02, $07, $F0, $5C, $DE, $02, $07, $A5, $1C, $10, $3F
.byte $B9, $03, $07, $38, $E9, $10, $9D, $03, $07, $9D, $03, $02, $18, $69, $08, $9D
.byte $07, $02, $A9, $01, $9D, $02, $02, $9D, $06, $02, $B9, $00, $07, $38, $E9, $08
.byte $9D, $00, $07, $9D, $00, $02, $9D, $04, $02, $A9, $AC, $9D, $01, $02, $A9, $AD
.byte $9D, $05, $02, $60, $A2, $38, $A0, $20, $A9, $80, $9D, $01, $07, $D0, $B5, $B9
.byte $03, $07, $18, $69, $10, $9D, $03, $07, $9D, $03, $02, $38, $E9, $08, $9D, $07
.byte $02, $A9, $41, $D0, $BF, $A5, $1C, $10, $34, $B9, $03, $07, $38, $E9, $06, $9D
.byte $03, $07, $9D, $03, $02, $9D, $07, $02, $A9, $01, $9D, $02, $02, $9D, $06, $02
.byte $B9, $00, $07, $38, $E9, $16, $9D, $00, $07, $9D, $00, $02, $18, $69, $08, $9D
.byte $04, $02, $A9, $AA, $9D, $01, $02, $A9, $AB, $9D, $05, $02, $60, $B9, $03, $07
.byte $18, $69, $06, $9D, $03, $07, $9D, $03, $02, $9D, $07, $02, $A9, $41, $D0, $CA
.byte $A5, $3C, $D0, $90, $A2, $38, $20, $6B, $D6, $A2, $3C, $A9, $F8, $9D, $00, $02
.byte $BD, $01, $07, $10, $27, $BD, $03, $07, $C9, $FC, $B0, $21, $BD, $00, $07, $C9
.byte $F0, $B0, $1A, $DE, $02, $07, $30, $15, $AD, $2F, $01, $C9, $03, $F0, $07, $20
.byte $35, $E0, $C9, $40, $B0, $07, $20, $AB, $D6, $20, $F1, $D6, $60, $A9, $00, $9D
.byte $01, $07, $A9, $F8, $9D, $00, $07, $9D, $00, $02, $60, $BD, $01, $07, $29, $0E
.byte $A8, $A5, $A5, $29, $02, $F0, $05, $98, $18, $69, $10, $A8, $B9, $D1, $D6, $18
.byte $7D, $00, $07, $9D, $00, $07, $B9, $D2, $D6, $18, $7D, $03, $07, $9D, $03, $07
.byte $60, $FD, $00, $FD, $03, $00, $03, $03, $03, $03, $00, $03, $FD, $00, $FD, $FD
.byte $FD, $FC, $00, $FC, $04, $00, $04, $04, $04, $04, $00, $04, $FC, $00, $FC, $FC
.byte $FC, $BD, $01, $07, $29, $0E, $A8, $B9, $10, $D7, $9D, $01, $02, $B9, $11, $D7
.byte $9D, $02, $02, $BD, $00, $07, $9D, $00, $02, $BD, $03, $07, $9D, $03, $02, $60
.byte $4C, $00, $5C, $40, $3C, $40, $5C, $C0, $4C, $80, $5C, $80, $3C, $00, $5C, $00
.byte $A2, $40, $A0, $38, $20, $2B, $D7, $A2, $44, $A0, $3C, $A5, $3A, $C9, $10, $B0
.byte $2B, $BD, $01, $07, $10, $29, $B9, $01, $07, $10, $21, $BD, $03, $07, $C9, $F8
.byte $B0, $1A, $BD, $00, $07, $C9, $F0, $B0, $13, $20, $00, $D8, $BD, $02, $07, $18
.byte $69, $10, $9D, $02, $07, $20, $B2, $D7, $20, $5B, $D8, $60, $4C, $9D, $D6, $A5
.byte $14, $4A, $29, $06, $A8, $B9, $7F, $D8, $24, $1F, $F0, $02, $A9, $5F, $9D, $01
.byte $02, $B9, $80, $D8, $9D, $02, $02, $A5, $16, $29, $08, $D0, $21, $AD, $20, $07
.byte $38, $E9, $08, $9D, $00, $02, $A5, $1C, $30, $0A, $AD, $23, $07, $18, $69, $0A
.byte $9D, $03, $02, $60, $AD, $23, $07, $38, $E9, $0A, $9D, $03, $02, $60, $A5, $A5
.byte $30, $DB, $AD, $20, $07, $38, $E9, $18, $9D, $00, $02, $AD, $23, $07, $9D, $03
.byte $02, $60, $BD, $01, $07, $29, $0F, $C9, $03, $90, $0C, $C9, $07, $90, $1B, $C9
.byte $0B, $90, $29, $C9, $0E, $90, $26, $A5, $A5, $29, $02, $F0, $03, $DE, $00, $07
.byte $DE, $00, $07, $DE, $00, $07, $DE, $00, $07, $60, $A5, $A5, $29, $02, $F0, $03
.byte $FE, $03, $07, $FE, $03, $07, $FE, $03, $07, $FE, $03, $07, $60, $A5, $A5, $29
.byte $02, $F0, $03, $DE, $03, $07, $DE, $03, $07, $DE, $03, $07, $DE, $03, $07, $60
.byte $BD, $02, $07, $C9, $C0, $B0, $41, $C9, $80, $B0, $2A, $C9, $40, $B0, $13, $BD
.byte $00, $07, $38, $E9, $04, $9D, $00, $07, $BD, $03, $07, $18, $69, $02, $9D, $03
.byte $07, $60, $BD, $00, $07, $18, $69, $04, $9D, $00, $07, $BD, $03, $07, $18, $69
.byte $02, $9D, $03, $07, $60, $BD, $00, $07, $18, $69, $04, $9D, $00, $07, $BD, $03
.byte $07, $38, $E9, $02, $9D, $03, $07, $60, $BD, $00, $07, $38, $E9, $04, $9D, $00
.byte $07, $BD, $03, $07, $38, $E9, $02, $9D, $03, $07, $60, $BD, $02, $07, $4A, $4A
.byte $4A, $4A, $4A, $4A, $0A, $A8, $B9, $7F, $D8, $9D, $01, $02, $B9, $80, $D8, $9D
.byte $02, $02, $BD, $00, $07, $9D, $00, $02, $BD, $03, $07, $9D, $03, $02, $60, $3B
.byte $01, $3A, $C1, $3B, $C1, $3A, $01, $A2, $48, $A0, $00, $A9, $F0, $20, $96, $D8
.byte $A2, $4C, $A0, $0C, $A9, $10, $18, $6D, $20, $07, $38, $E9, $08, $9D, $00, $07
.byte $9D, $00, $02, $98, $9D, $02, $07, $AD, $23, $07, $9D, $03, $07, $9D, $03, $02
.byte $A9, $80, $9D, $01, $07, $D0, $4E, $A2, $48, $20, $BE, $D8, $A2, $4C, $A5, $3A
.byte $C9, $10, $90, $03, $4C, $9D, $D6, $A5, $A5, $29, $04, $F0, $42, $BD, $01, $07
.byte $10, $B5, $A5, $14, $4A, $90, $03, $FE, $02, $07, $BD, $02, $07, $C9, $18, $90
.byte $05, $A9, $00, $9D, $02, $07, $0A, $A8, $AD, $20, $07, $18, $79, $10, $D9, $38
.byte $E9, $08, $9D, $00, $07, $9D, $00, $02, $AD, $23, $07, $18, $79, $11, $D9, $9D
.byte $03, $07, $9D, $03, $02, $A9, $99, $9D, $01, $02, $A9, $00, $9D, $02, $02, $60
.byte $F0, $00, $F0, $05, $F2, $08, $F4, $0B, $F8, $0E, $FC, $10, $00, $10, $04, $10
.byte $08, $0E, $0C, $0D, $0E, $08, $10, $04, $10, $00, $0F, $FB, $0E, $F8, $0B, $F5
.byte $08, $F2, $04, $F1, $00, $F0, $FB, $F1, $F8, $F2, $F4, $F5, $F2, $F8, $F0, $FC
.byte $60, $B9, $01, $07, $29, $F8, $F0, $3C, $B9, $00, $07, $18, $69, $06, $38, $FD
.byte $00, $07, $B0, $02, $49, $FF, $C9, $0E, $B0, $29, $90, $16, $B9, $01, $07, $29
.byte $F8, $F0, $21, $B9, $00, $07, $38, $FD, $00, $07, $B0, $02, $49, $FF, $C9, $0C
.byte $B0, $11, $B9, $03, $07, $38, $FD, $03, $07, $B0, $02, $49, $FF, $C9, $08, $B0
.byte $02, $68, $68, $60, $38, $60, $20, $5C, $D9, $60, $A0, $20, $20, $63, $D9, $60
.byte $A5, $3C, $D0, $15, $A0, $38, $20, $5C, $D9, $A0, $3C, $20, $5C, $D9, $A0, $40
.byte $20, $5C, $D9, $A0, $44, $20, $5C, $D9, $60, $AD, $3A, $07, $C9, $04, $D0, $D4
.byte $A0, $38, $20, $86, $D9, $B0, $CD, $20, $D5, $D9, $18, $60, $A5, $3C, $D0, $E9
.byte $A0, $38, $20, $41, $D9, $A0, $3C, $20, $41, $D9, $A0, $40, $20, $41, $D9, $A0
.byte $44, $20, $41, $D9, $60, $CE, $4F, $01, $AD, $4F, $01, $F0, $02, $10, $07, $A9
.byte $00, $85, $3C, $8D, $4F, $01, $60, $A5, $3E, $D0, $0B, $A0, $48, $20, $5C, $D9
.byte $A0, $4C, $20, $5C, $D9, $60, $38, $60, $A5, $16, $29, $04, $D0, $03, $A9, $0F
.byte $60, $A9, $07, $60, $28, $38, $A9, $FF, $60, $A5, $A2, $30, $F8, $A0, $20, $B9
.byte $08, $07, $D0, $F1, $B9, $01, $07, $29, $40, $D0, $EA, $20, $F8, $D9, $85, $00
.byte $B9, $00, $07, $38, $E9, $04, $38, $FD, $00, $07, $B0, $02, $49, $FF, $C5, $00
.byte $B0, $D3, $B9, $03, $07, $38, $FD, $03, $07, $08, $B0, $02, $49, $FF, $C9, $08
.byte $B0, $C2, $28, $E0, $F0, $B0, $04, $A5, $3E, $D0, $54, $20, $39, $DB, $A9, $00
.byte $9D, $04, $07, $A9, $7F, $99, $08, $07, $A9, $80, $8D, $81, $03, $98, $48, $A9
.byte $03, $20, $37, $E3, $68, $A8, $20, $16, $DB, $A5, $A6, $D0, $2E, $AD, $51, $01
.byte $29, $3F, $D0, $14, $A9, $00, $99, $08, $07, $B9, $01, $07, $09, $40, $99, $01
.byte $07, $A9, $20, $99, $05, $07, $18, $60, $38, $E9, $01, $85, $00, $AD, $51, $01
.byte $29, $C0, $05, $00, $8D, $51, $01, $A9, $07, $85, $A6, $A9, $00, $38, $60, $A9
.byte $F8, $9D, $00, $07, $A9, $00, $9D, $01, $07, $A9, $10, $8D, $81, $03, $4C, $C6
.byte $EA, $B9, $00, $07, $38, $E9, $0C, $38, $FD, $00, $07, $B0, $02, $49, $FF, $C9
.byte $04, $B0, $0F, $B9, $03, $07, $38, $FD, $03, $07, $B0, $02, $49, $FF, $C9, $10
.byte $B0, $01, $60, $B9, $03, $07, $C9, $0C, $90, $06, $C9, $F4, $B0, $02, $38, $60
.byte $BD, $03, $07, $C9, $0C, $90, $06, $C9, $F4, $B0, $02, $38, $60, $18, $60, $A0
.byte $20, $20, $F8, $D9, $85, $00, $B9, $00, $07, $38, $E9, $04, $38, $FD, $00, $07
.byte $B0, $02, $49, $FF, $C5, $00, $B0, $0D, $B9, $03, $07, $38, $FD, $03, $07, $B0
.byte $02, $49, $FF, $C9, $08, $60, $98, $48, $AD, $58, $7F, $85, $00, $AD, $59, $7F
.byte $85, $01, $BD, $01, $07, $29, $F8, $4A, $4A, $4A, $A8, $A5, $A6, $38, $F1, $00
.byte $B0, $02, $A9, $00, $85, $A6, $68, $A8, $60, $90, $13, $B9, $03, $07, $18, $69
.byte $04, $99, $03, $07, $BD, $03, $07, $38, $E9, $04, $9D, $03, $07, $60, $B9, $03
.byte $07, $C9, $0C, $90, $13, $B9, $03, $07, $38, $E9, $04, $99, $03, $07, $BD, $03
.byte $07, $18, $69, $04, $9D, $03, $07, $60, $A9, $08, $99, $03, $07, $60, $BD, $02
.byte $07, $29, $F0, $18, $69, $80, $85, $00, $A0, $08, $BD, $05, $07, $20, $A1, $DB
.byte $A5, $02, $9D, $05, $07, $BD, $02, $07, $29, $0F, $0A, $0A, $0A, $0A, $18, $69
.byte $80, $85, $00, $A0, $02, $BD, $04, $07, $20, $A1, $DB, $A5, $02, $9D, $04, $07
.byte $60, $84, $01, $85, $02, $18, $69, $80, $29, $FC, $C5, $00, $F0, $09, $90, $08
.byte $A5, $02, $38, $E5, $01, $85, $02, $60, $A5, $02, $18, $65, $01, $85, $02, $60
.byte $20, $6E, $DB, $20, $DA, $DB, $4C, $C9, $DB, $BD, $03, $07, $85, $00, $BD, $04
.byte $07, $20, $EB, $DB, $A5, $00, $9D, $03, $07, $60, $BD, $00, $07, $85, $00, $BD
.byte $05, $07, $20, $EB, $DB, $A5, $00, $9D, $00, $07, $60, $29, $FC, $C9, $04, $90
.byte $3F, $C9, $FC, $B0, $3B, $29, $F0, $4A, $4A, $4A, $A8, $B9, $08, $DC, $85, $01
.byte $B9, $09, $DC, $85, $02, $6C, $01, $00, $28, $DC, $31, $DC, $35, $DC, $39, $DC
.byte $2E, $DC, $47, $DC, $45, $DC, $43, $DC, $4C, $DC, $4E, $DC, $50, $DC, $52, $DC
.byte $55, $DC, $5B, $DC, $62, $DC, $66, $DC, $A9, $0F, $25, $14, $D0, $02, $E6, $00
.byte $60, $A9, $07, $D0, $F5, $A9, $03, $D0, $F1, $A9, $01, $D0, $ED, $A5, $14, $4A
.byte $90, $EC, $60, $E6, $00, $E6, $00, $E6, $00, $E6, $00, $60, $C6, $00, $C6, $00
.byte $C6, $00, $C6, $00, $60, $A5, $14, $4A, $90, $F8, $60, $A9, $03, $25, $14, $F0
.byte $F1, $60, $A9, $07, $D0, $F7, $A9, $0F, $D0, $F3, $A0, $00, $48, $29, $F8, $85
.byte $00, $B9, $3F, $00, $29, $F8, $C5, $00, $D0, $18, $B9, $3F, $00, $29, $07, $C9
.byte $03, $B0, $0B, $B9, $3F, $00, $18, $69, $01, $99, $3F, $00, $68, $60, $68, $68
.byte $68, $60, $A5, $00, $99, $3F, $00, $68, $60, $A0, $01, $D0, $CF, $A0, $02, $D0
.byte $CB, $A0, $03, $D0, $C7, $A9, $05, $D0, $14, $BD, $08, $07, $D0, $25, $98, $48
.byte $A5, $3C, $D0, $F1, $AD, $52, $01, $29, $07, $A8, $B9, $D6, $DC, $85, $00, $68
.byte $A8, $BD, $07, $07, $38, $E5, $00, $F0, $0C, $90, $0A, $9D, $07, $07, $A9, $10
.byte $9D, $08, $07, $68, $68, $60, $01, $02, $03, $04, $05, $06, $06, $06, $A9, $0C
.byte $85, $02, $BD, $08, $07, $F0, $EE, $DE, $08, $07, $29, $03, $85, $00, $8A, $85
.byte $01, $18, $65, $02, $A8, $B9, $02, $02, $29, $FC, $05, $00, $99, $02, $02, $88
.byte $88, $88, $88, $C4, $01, $B0, $EE, $60, $BD, $03, $07, $C9, $F8, $B0, $08, $BD
.byte $00, $07, $C9, $F8, $B0, $01, $60, $20, $1D, $DD, $68, $68, $60, $A9, $00, $9D
.byte $01, $07, $9D, $02, $07, $9D, $03, $07, $9D, $09, $07, $A9, $F8, $9D, $00, $07
.byte $9D, $00, $02, $9D, $04, $02, $9D, $08, $02, $9D, $0C, $02, $60, $BD, $00, $07
.byte $9D, $08, $02, $9D, $0C, $02, $38, $E9, $08, $9D, $00, $02, $9D, $04, $02, $BD
.byte $03, $07, $38, $E9, $04, $9D, $03, $02, $9D, $0B, $02, $18, $69, $08, $9D, $07
.byte $02, $9D, $0F, $02, $60, $20, $08, $DD, $BD, $02, $07, $F0, $1C, $DE, $02, $07
.byte $C9, $E8, $90, $1E, $C9, $F0, $90, $09, $C9, $F8, $90, $09, $A9, $32, $4C, $CD
.byte $C4, $A9, $30, $D0, $F9, $A9, $31, $D0, $F5, $4C, $1D, $DD, $A9, $00, $9D, $02
.byte $07, $60, $20, $1B, $7F, $F0, $F5, $85, $08, $C9, $05, $B0, $25, $C9, $03, $B0
.byte $17, $20, $8A, $D9, $90, $05, $A9, $00, $4C, $67, $C6, $A9, $10, $8D, $81, $03
.byte $20, $89, $DD, $A5, $08, $4C, $CC, $DD, $20, $8A, $D9, $90, $EE, $A9, $01, $4C
.byte $67, $C6, $20, $8A, $D9, $90, $E4, $A9, $1A, $4C, $67, $C6, $85, $08, $20, $EC
.byte $DD, $C9, $03, $90, $12, $AD, $4A, $01, $C9, $E7, $90, $0B, $A9, $03, $8D, $4B
.byte $01, $A9, $E7, $8D, $4A, $01, $60, $A5, $08, $4C, $F0, $E2, $20, $41, $DE, $48
.byte $AD, $4C, $01, $D0, $16, $AD, $4D, $01, $D0, $11, $68, $18, $6D, $4A, $01, $8D
.byte $4A, $01, $AD, $4B, $01, $69, $00, $8D, $4B, $01, $60, $68, $8D, $28, $01, $38
.byte $AD, $4C, $01, $ED, $28, $01, $8D, $2A, $01, $90, $04, $8D, $4C, $01, $60, $AD
.byte $4D, $01, $E9, $00, $90, $0A, $8D, $4D, $01, $AD, $2A, $01, $8D, $4C, $01, $60
.byte $38, $AD, $28, $01, $ED, $4C, $01, $8D, $28, $01, $A9, $00, $8D, $4C, $01, $F0
.byte $BA, $C9, $05, $B0, $07, $C9, $03, $B0, $06, $A9, $01, $60, $A9, $0A, $60, $A9
.byte $05, $60, $20, $5A, $DE, $A5, $08, $4C, $37, $E3, $85, $08, $AD, $4C, $01, $D0
.byte $17, $AD, $4D, $01, $D0, $12, $AD, $4A, $01, $38, $E5, $08, $8D, $4A, $01, $AD
.byte $4B, $01, $E9, $00, $8D, $4B, $01, $60, $18, $AD, $4C, $01, $65, $08, $8D, $4C
.byte $01, $AD, $4D, $01, $69, $00, $8D, $4D, $01, $AD, $4C, $01, $C9, $E7, $90, $11
.byte $AD, $4D, $01, $C9, $03, $90, $0A, $A9, $E7, $8D, $4C, $01, $A9, $03, $8D, $4D
.byte $01, $60, $E6, $AA, $A5, $AA, $18, $69, $01, $0A, $0A, $0A, $38, $E9, $01, $85
.byte $A6, $60, $20, $1E, $DF, $BD, $00, $07, $9D, $04, $02, $38, $E9, $08, $9D, $00
.byte $02, $BD, $03, $07, $9D, $03, $02, $9D, $07, $02, $BD, $02, $07, $F0, $60, $DE
.byte $02, $07, $C9, $E8, $90, $1F, $C9, $F0, $90, $11, $C9, $F8, $90, $09, $A9, $4A
.byte $9D, $01, $02, $9D, $05, $02, $60, $A9, $5A, $D0, $F5, $A9, $4B, $D0, $F1, $A9
.byte $00, $9D, $02, $07, $60, $A0, $20, $20, $86, $D9, $90, $15, $20, $1B, $7F, $85
.byte $08, $A9, $27, $9D, $01, $02, $A9, $5F, $9D, $05, $02, $A9, $01, $9D, $02, $02
.byte $60, $A9, $10, $8D, $81, $03, $20, $2F, $DF, $A9, $01, $4C, $CC, $DD, $BD, $00
.byte $07, $C9, $F8, $B0, $08, $BD, $03, $07, $C9, $F8, $B0, $01, $60, $68, $68, $A9
.byte $00, $9D, $01, $07, $A9, $F8, $9D, $00, $07, $9D, $00, $02, $9D, $04, $02, $60
.byte $A5, $3E, $D0, $01, $60, $A5, $14, $29, $3F, $D0, $05, $A9, $40, $8D, $83, $03
.byte $A5, $14, $29, $01, $D0, $EE, $C6, $3E, $60, $A9, $F8, $9D, $08, $02, $9D, $0C
.byte $02, $60, $20, $59, $DF, $A5, $3E, $F0, $3D, $C9, $01, $F0, $3A, $BD, $00, $07
.byte $C9, $F8, $B0, $33, $A9, $AA, $9D, $01, $02, $A9, $AB, $9D, $05, $02, $A9, $01
.byte $9D, $02, $02, $9D, $06, $02, $A5, $14, $29, $03, $D0, $03, $FE, $00, $07, $BD
.byte $00, $07, $9D, $00, $02, $18, $69, $08, $9D, $04, $02, $BD, $03, $07, $9D, $03
.byte $02, $9D, $07, $02, $68, $68, $60, $A9, $00, $9D, $01, $07, $A9, $F8, $9D, $00
.byte $02, $9D, $04, $02, $9D, $00, $07, $60, $BD, $03, $07, $18, $69, $08, $A8, $BD
.byte $00, $07, $18, $69, $08, $20, $12, $7F, $8D, $D3, $04, $A5, $00, $85, $12, $A5
.byte $01, $85, $13, $BD, $03, $07, $38, $E9, $00, $A8, $BD, $00, $07, $18, $69, $08
.byte $20, $12, $7F, $8D, $D4, $04, $BD, $03, $07, $18, $69, $0A, $A8, $BD, $00, $07
.byte $20, $12, $7F, $8D, $D5, $04, $BD, $03, $07, $38, $E9, $02, $A8, $BD, $00, $07

; 0xE000 Starts here.  These routines are called by other banks
; so they have to line up
.byte $20, $12, $7F, $8D, $D6, $04, $BD, $03, $07, $18, $69, $07, $20, $2B, $E0, $8D
.byte $D7, $04, $BD, $03, $07, $18, $69, $01, $20, $2B, $E0, $8D, $D8, $04, $BD, $03
.byte $07, $18, $69, $04, $20, $2B, $E0, $8D, $D9, $04, $60, $A8, $BD, $00, $07, $38
.byte $E9, $10, $4C, $12, $7F, $BD, $03, $07, $18, $69, $04, $A8, $BD, $00, $07, $18
.byte $69, $06, $20, $12, $7F, $8D, $D3, $04, $60, $A9, $18, $85, $04, $A9, $10, $85
.byte $05, $D0, $08, $A9, $08, $85, $04, $A9, $00, $85, $05, $BD, $03, $07, $18, $65
.byte $04, $20, $7D, $E0, $8D, $D5, $04, $A0, $10, $B1, $00, $8D, $D3, $04, $BD, $03
.byte $07, $38, $E5, $05, $20, $7D, $E0, $8D, $D6, $04, $4C, $A3, $E0, $A8, $BD, $00
.byte $07, $38, $E9, $07, $4C, $12, $7F, $BD, $03, $07, $18, $69, $08, $20, $7D, $E0
.byte $8D, $D5, $04, $A0, $10, $B1, $00, $8D, $D3, $04, $BD, $03, $07, $20, $7D, $E0
.byte $8D, $D6, $04, $A0, $10, $B1, $00, $8D, $D4, $04, $60, $A0, $60, $20, $BC, $E0
.byte $A0, $70, $20, $BC, $E0, $A0, $80, $20, $BC, $E0, $A0, $90, $B9, $01, $07, $29
.byte $F8, $C9, $78, $D0, $31, $20, $B1, $DA, $B0, $2C, $A9, $FF, $8D, $D3, $04, $8D
.byte $D4, $04, $98, $48, $BD, $03, $07, $85, $00, $B9, $04, $07, $20, $EB, $DB, $A5
.byte $00, $9D, $03, $07, $68, $A8, $BD, $00, $07, $85, $00, $B9, $05, $07, $20, $EB
.byte $DB, $A5, $00, $9D, $00, $07, $60, $A5, $37, $09, $04, $85, $37, $EE, $24, $07

; 0xE100
.byte $AD, $24, $07, $C9, $10, $90, $16, $C9, $20, $90, $22, $C9, $30, $90, $26, $A5
.byte $37, $29, $FB, $85, $37, $A9, $00, $8D, $24, $07, $E6, $3A, $60, $A9, $10, $A2
.byte $17, $A0, $07, $8D, $A1, $03, $8E, $A2, $03, $8C, $A3, $03, $60, $A9, $00, $A2
.byte $07, $A0, $08, $D0, $EE, $A9, $0F, $AA, $A8, $D0, $E8, $EE, $24, $07, $AD, $24
.byte $07, $C9, $10, $90, $E8, $C9, $20, $90, $D4, $C9, $30, $90, $08, $E6, $3A, $A9
.byte $00, $8D, $24, $07, $60, $A9, $30, $A2, $28, $A0, $17, $D0, $C6, $A5, $AB, $29
.byte $C0, $D0, $1F, $AD, $E2, $04, $D0, $1A, $20, $83, $E4, $A5, $38, $F0, $14, $20
.byte $87, $E1, $A9, $03, $85, $00, $A5, $18, $29, $10, $F0, $06, $A5, $00, $85, $38
.byte $85, $DF, $60, $A9, $01, $D0, $ED, $A5, $3A, $29, $F0, $C9, $10, $D0, $1C, $A5
.byte $38, $C9, $02, $D0, $16, $4C, $66, $E2, $A5, $AB, $29, $C0, $D0, $0D, $A5, $38
.byte $C9, $01, $F0, $0E, $C9, $03, $D0, $03, $4C, $2E, $E2, $60, $4C, $71, $E3, $4C
.byte $90, $E3

;0xE1B2
  JSR $EEF0                
  LDA #$02                 
  STA $38                  
  STA $DF                  
  JSR $E25B                
  LDA $3A                  
  CMP #$10                 
  BCS :++        
  JSR $E1AC                
  LDY #$1F                 
: LDA $E20E,Y              
  STA $0390,Y              
  DEY                      
  BPL :-                
  JSR $E1F6                
  JSR $EE42

  JSL no_scroll_screen_enable
  .byte $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea

  PLA                      
  PLA                      
  JMP $7F24                
: JSR $E1AF                

  JMP $E1C7
  LDA $3A
  CMP #$10
  BCS :+
: LDA #$0F
  STA $0395
  STA $0396
  STA $0397
  RTS


; 0xE20B - Check for map?
: LDA $013D
  BNE :- ; Changed from BEQ :- so we always have map (unless you spend 990 to turn it off)
  RTS

.byte $0F, $20
.byte $22, $02, $0F, $2A, $17, $07, $0F, $37, $10, $00, $0F, $31, $27, $15, $0F, $20
.byte $26, $07, $0F, $31, $02, $15, $0F, $11, $25, $31, $0F, $20, $00, $10

; 0xE22E
  JSR $EEF0
  LDA #$00
  STA $38
  STA $DF
  JSR $E25B
  LDA $3A
  CMP #$10
  BCS @nes_e24f
  ; ee42 is moved ahead of 7f18 and 7f21 so that H and V offsets are restored 
  ; prior to drawing tiles
  JSR $EE42
  JSR $7F18
  JSR $7F21
  JSR $EBC9
  JMP $E1EB

; 0xE24F
@nes_e24f:
.byte $20
.byte $1E, $7F, $20, $21, $7F, $20, $C9, $EB, $4C, $EB, $E1, $A0, $00, $A9, $F8, $99
.byte $00, $02, $C8, $D0, $FA, $60

; e266 - checking for various items (pencil/torch)
  LDX #$04
  LDA $013A
  ; BEQ :+
  BNE :+  ; inverted so that we get functionality without the torch
  LDA $14
  AND #$08
  BNE :+
  LDA $46
  AND #$07
  ASL
  ASL
  ASL
  CLC
  ADC #$A0
  STA $0203,X
  LDA $46
  AND #$F8
  CLC
  ADC #$1F
  STA $0200,X
  LDA #$0A
  STA $0201,X
  LDA #$01
  STA $0202,X
  RTS
: LDA #$F8
  STA $0200,X
  RTS

.byte $A2, $41, $A9, $00, $9D
.byte $31, $01, $CA, $10, $FA, $60, $A0, $00, $C9, $00, $D0, $01, $60, $A0, $07, $C9
.byte $80, $B0, $1A, $88, $C9, $40, $B0, $15, $88, $C9, $20, $B0, $10, $88, $C9, $10
.byte $B0, $0B, $88, $C9, $05, $B0, $06, $88, $C9, $03, $B0, $01, $88, $98, $0A, $A8
.byte $60, $0A, $00, $64, $00, $2C, $01, $F4, $01, $E8, $03, $D0, $07, $A0, $0F, $40
.byte $1F, $48, $20, $AD, $E2, $8A, $48, $A2, $00, $20, $FA, $E2, $68, $AA, $68, $60
.byte $48, $20, $AD, $E2, $8A, $48, $A2, $03, $D0, $EF, $B9, $D1, $E2, $18, $7D, $31

; 0xE300
.byte $01, $9D, $31, $01, $B9, $D2, $E2, $7D, $32, $01, $9D, $32, $01, $BD, $33, $01
.byte $69, $00, $9D, $33, $01, $C9, $98, $90, $1D, $BD, $32, $01, $C9, $96, $90, $16
.byte $BD, $31, $01, $C9, $80, $90, $0F, $A9, $7F, $9D, $31, $01, $A9, $96, $9D, $32
.byte $01, $A9, $98, $9D, $33, $01, $60, $20, $A6, $E2, $AD, $34, $01, $38, $F9, $D1
.byte $E2, $8D, $28, $01, $AD, $35, $01, $F9, $D2, $E2, $8D, $29, $01, $AD, $36, $01
.byte $E9, $00, $8D, $2A, $01, $B0, $0C, $A9, $00, $A0, $02, $99, $34, $01, $88, $10
.byte $FA, $30, $0B, $A0, $02, $B9, $28, $01, $99, $34, $01, $88, $10, $F7, $A5, $08
.byte $60, $A9, $72, $85, $08, $A9, $E6, $85, $09, $20, $9F, $E3, $20, $CB, $E7, $20

.byte $E7, $E3, $AD, $E2, $04, $48, $A9, $08, $20, $90, $CA, $68, $8D, $E2, $04, $60
.byte $A9, $77, $85, $08, $A9, $E6, $85, $09, $A9, $20, $85, $00, $4C, $79, $E3, $20
.byte $A6, $E3, $20, $C5, $E3, $60, $A0, $00, $B9, $2F, $01, $AA, $E8, $D0, $01, $CA
.byte $8A, $99, $38, $01, $C8, $C0, $02, $90, $EF, $A5, $3A, $C9, $10, $90, $05, $A9

.byte $04, $8D, $39, $01, $60, $A9, $00, $85, $05, $AD, $51, $01, $AA, $4A, $4A, $4A
.byte $4A, $4A, $4A, $A8, $8A, $29, $1F, $D9, $E3, $E3, $90, $03, $B9, $E3, $E3, $8D
.byte $3C, $01, $60, $01, $08, $08, $08, $20, $F9, $E3, $20, $07, $E4, $20, $4D, $E4
.byte $20, $62, $E4, $20, $7D, $E4, $4C, $68, $E5


; 0xE3F9
  LDA #$F8                 
  LDX #$00                 
: STA $0200,X              
  INX                      
  INX                      
  INX                      
  INX                      
  BNE :-                
  RTS                      

; 0xE407
  LDA #$00                 
  TAY                      
  TAX                      
: LDA #$08                 
  STA $03                  
  TYA                      
  ASL A                    
  CLC                      
  ADC #$41                 
  STA $C5                  
  LDA #$E4                 
  ADC #$00                 
  STA $C6                  
  STY $BA                  
  LDY #$00                 
  LDA ($C5),Y              
  STA $C7                  
  INY                      
  LDA ($C5),Y              
  STA $C8                  
  DEY                      
: LDA ($C7),Y              
  BEQ :+
  LDA $E5B2,X              
  STA $0240,X              
: INX                      
  DEC $03                  
  BNE :--                
  LDY $BA                  
  INY                      
  CPY #$06                 
  BCC :---               
  RTS                      

; e441
.byte $4E, $01, $4F, $01, $50, $01, $3A, $01, $3B, $01, $51, $01

; e44d
  LDA $0151                
  AND #$C0                 
  BEQ :++
  LDX #$00                 
: LDA $E5E2,X              
  STA $0268,X              
  INX                      
  CPX #$10                 
  BNE :-                
: RTS                      

;e462
  LDX $0152                
  INX                      
  CPX #$05                 
  BCC :+               
  LDX #$05                 
: TXA                      
  ASL A                    
  ASL A                    
  TAY                      
  LDX #$00                 
: LDA $E5F2,X              
  STA $0278,X              
  INX                      
  DEY                      
  BNE :-                
  RTS

;e47d                
  JSR $E483                
  JMP $E4FC  

; 0xe483
  LDA #$00                 
  STA $07                  
: LDX $07                  
  LDA #$E4                 
  PHA                      
  LDA #$97                 
  PHA                      
  LDA $013E,X              
  BEQ @e4a1
  BPL @e4c4
  BMI @e4a1                
  INC $07                  
  LDA $07                  
  CMP #$03                 
  BCC :-              
  RTS                      

; 0xe4a1
@e4a1:
  INX                      
  STX $01                  
  DEX                      
  LDY #$00                 
: LDA $0141,Y              
  CMP $01                  
  BEQ @e4b4               
  INY                      
  CPY #$03                 
  BCC :-                
  RTS                      

; 0xe4b4
@e4b4:
.byte $BD, $65, $E5, $85, $01, $BD, $3E, $01, $29, $03, $05, $01

; 0xe4c0
.byte $99, $41, $01, $60
@e4c4:
.byte $E8, $86, $01, $CA, $BD, $65, $E5, $85, $02, $A0, $00, $B9
.byte $41, $01, $C5, $01, $F0, $25, $29, $F0, $C5, $02, $F0, $12, $C8, $C0, $03, $90
.byte $EE, $A0, $00, $B9, $41, $01, $F0, $0E, $C8, $C0, $03, $90, $F6, $60, $B9, $41
.byte $01, $29, $0F, $9D, $3E, $01, $A5, $01, $99, $41, $01, $60

; 0xe4fc
  LDA #$00                 
  STA $00                  
  STA $01                  
  STA $04  
@e504:                      
  LDX $00                  
  LDA $0141,X              
  BEQ @rts_from_e4fc               
  BMI @e55a             
  TAY                      
  DEY                      
  STY $05                  
  LDA $013E,Y              
  AND #$03           
  LDX #$00                 
  CMP #$01                 
  BEQ :+
  LDA $3A                  
  CMP #$10                 
  BCS :+
  LDX #$03                 
: STX $06                  
  CLC                      
  LDA $05                  
  ADC $06                  
  TAY                      
  LDA $E606,Y              
  TAX                      
  LDY $01                  
  STY $03                  
  LDA #$08                 
  STA $02                  
: LDA $E60F,X              
  STA $028C,Y              
  INX                      
  INY                      
  DEC $02                  
  BNE :-
  STY $01                  
  LDY $04                  
  LDA $E60C,Y              
  LDY $03                  
  INY                      
  INY                      
  INY                      
  STA $028C,Y              
  INY                      
  INY                      
  INY                      
  INY                      
  STA $028C,Y  
@e55a:            
  INC $04                  
  INC $00                  
  LDA $00                  
  CMP #$03                 
  BCC @e504   
@rts_from_e4fc:              
  RTS                      

;e565
.byte $90, $A0, $B0

;e5d8
  LDX #$00                 
  STX $00                  
  STX $01                  
: LDA $0153,X              
  JSR $E57D                
  INC $00                  
  LDX $00                  
  CPX #$03                 
  BCC :-                
  RTS                      

; e57d
  BEQ @e5aa                
  LDY #$00                 
  CMP #$01                 
  BEQ :+
  LDA $3A                  
  CMP #$10                 
  BCS :+              
  LDY #$03                 
: STY $06                  
  CLC                      
  TXA                      
  ADC $06                  
  TAX                      
  LDA $E606,X              
  TAY                      
  LDA #$08                 
  STA $02                  
  LDX $01                  
: LDA $E642,Y              
  STA $02A4,X              
  INX                      
  INY                      
  DEC $02                  
  BNE :-
@e5aa:            
  LDA $01                  
  CLC                      
  ADC #$08                 
  STA $01                  
  RTS                      

; 0xe5b2 
.byte $87, $32, $21, $CC, $8F, $33, $21, $CC, $AF, $AA, $21, $54, $B7, $AB

.byte $21, $54, $AF, $9F, $20, $7C, $B7, $AF, $20, $7C, $AF, $8E, $21, $A4, $B7, $8F
.byte $20, $A4, $AF, $34, $21, $CC, $B7, $55, $21, $CC, $AF, $49, $21, $2C, $B7, $59
.byte $21, $2C, $AF, $50, $20, $28, $AF, $50, $60, $30, $B7, $51, $20, $28, $B7, $51
.byte $60, $30, $5F, $09, $20, $68, $5F, $09, $20, $70, $5F, $09, $20, $78, $5F, $09

; 0xE600
.byte $20, $80, $5F, $09, $20, $88, $00, $08, $10, $18, $20, $28, $2C, $40, $54, $87
.byte $9B, $23, $2C, $8F, $9C, $23, $2C, $87, $3E, $23, $40, $8F, $3E, $A3, $40, $87
.byte $95, $23, $54, $8F, $96, $23, $54, $87, $9B, $21, $2C, $8F, $9C, $21, $2C, $87
.byte $3E, $20, $40, $8F, $3E, $A0, $40, $87, $95, $21, $54, $8F, $96, $21, $54, $7C
.byte $90, $A4, $87, $38, $20, $7C, $8F, $39, $20, $7C, $87, $38, $20, $90, $8F, $39
.byte $20, $90, $87, $38, $20, $A4, $8F, $39, $20, $A4, $87, $9D, $21, $7C, $8F, $9E
.byte $21, $7C, $87, $12, $21, $90, $8F, $13, $21, $90, $87, $30, $20, $A4, $8F, $31
.byte $20, $A4, $01, $20, $12, $8B, $E7, $06, $00, $00, $10, $4E, $4F, $06, $20, $00
.byte $10, $4F, $4E, $06, $80, $03, $10, $4E, $4F, $06, $A0, $03, $10, $4F, $4E, $07
.byte $40, $00, $02, $8F, $07, $5E, $00, $02, $8F, $05, $60, $00, $98, $91, $05, $61
.byte $00, $98, $92, $05, $7E, $00, $98, $91, $05, $7F, $00, $98, $92, $07, $60, $03
.byte $02, $6D, $07, $7E, $03, $02, $6D, $05, $E3, $01, $1A, $6F, $05, $83, $02, $1A
.byte $6F, $05, $43, $03, $1A, $6F, $05, $03, $02, $8A, $6F, $05, $A8, $02, $85, $6F
.byte $05, $0D, $02, $8A, $6F, $05, $B2, $02, $85, $6F, $05, $17, $02, $8A, $6F, $05
.byte $1C, $02, $8A, $6F, $03, $87, $00, $05, $7C, $E7, $03, $C7, $00, $05, $81, $E7
.byte $04, $05, $01, $07, $7B, $12, $1D, $1A, $16, $27, $29, $04, $43, $01, $09, $1A

; 0xE700
.byte $23, $19, $2A, $27, $16, $23, $18, $1A, $04, $84, $01, $08, $28, $29, $27, $1A
.byte $23, $1C, $29, $1D, $03, $B4, $01, $05, $86, $E7, $04, $E4, $01, $08, $6F, $2C
.byte $1A, $16, $25, $24, $23, $28, $04, $EE, $01, $09, $29, $27, $1A, $16, $28, $2A
.byte $27, $1A, $28, $10, $8C, $00, $07, $44, $01, $12, $10, $CC, $00, $07, $31, $01
.byte $12, $10, $0D, $01, $03, $4A, $01, $12, $10, $B9, $01, $01, $38, $01, $12, $10
.byte $BB, $01, $01, $39, $01, $00, $02, $BA, $01, $0F, $10, $05, $03, $02, $3C, $01
.byte $12, $10, $0A, $03, $02, $4F, $01, $12, $10, $0F, $03, $02, $50, $01, $12, $04
.byte $74, $00, $08, $12, $22, $12, $16, $12, $25, $12, $12, $00, $29, $24, $29, $16
.byte $21, $28, $18, $24, $27, $1A, $28, $29, $16, $1C, $1A, $2A, $0A, $0A, $0A, $0A
.byte $0A, $0A, $8A, $22, $88, $AA, $00, $00, $55, $55, $88, $E2, $FF, $FF, $00, $00
.byte $55, $55, $88, $A2, $AF, $AF, $A0, $A0, $A0, $A0, $A8, $AA, $00, $00, $22, $00
.byte $88, $00, $AA, $AA, $0A, $2A, $2A, $8A, $8A, $0A, $AA, $AA, $A0, $A2, $A2, $A8

.byte $A8, $A0, $AA, $0A, $0A, $0A, $0A, $0A, $0A, $0A, $0A

; 0xE7CB - E7E0
JMP @nesE7CB_replc    
JMP @nesE7CD_replc
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00           
.byte $00

; 0xE7E1 - E7FB
JMP @nesE7E1_replc
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00  
          

; 0xE7FB
 .byte $1B, $E8, $68, $E8, $72


; 0xE800
.byte $E8, $8C, $E8, $9D, $E8, $AE, $E8, $CD, $E8, $E1, $E8, $03, $E9, $1C, $E9, $3C
.byte $E9, $3C, $E9, $3C, $E9, $3C, $E9, $3C, $E9, $79, $E9

; 0xE81B - E860
  JMP @nes_e81b_replacement
  ; using 00 so if something does jmp here I know to fix it
  .byte $00, $00
  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
  .byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
  .byte $00
                   
  ; e861 - write A to VM Data X Times
JMP @nes_e861_replacement
.byte $00, $00, $00, $00          

  ; e868 - e871  
  JSR $E93D                
  JSR $EA4B  
  ; also not writing attributes correctly                
  STA VMDATAL ; PpuData_2007         
  RTS             
         
  ; e872-e88b
  JSR $E93D                
  JSR $E951                
  JSR $E96E                
  STY $01                  
  LDY #$00                 
: LDA ($0C),Y     
  ; also not writing attributes correctly      
  STA VMDATAL ; PpuData_2007         
  INY                      
  DEC $02                  
  BNE :-             
  LDY $01                  
  RTS            

  ; e88c - e89c  
  JSR $E93D                
  JSR $E951                
  TAX                      
: JSR $EA4B        
  ; also not writing attributes correctly      
  STA VMDATAL ; PpuData_2007         
  DEX                      
  BNE :-              
  RTS             
          
  ; e89d - e8ad
  JSR $E93D                
  JSR $E951                
  TAX                      
  JSR $EA4B          
  ; also not writing attributes correctly      
: STA VMDATAL ; PpuData_2007         
  DEX                      
  BNE :-
  RTS            
          
  ;e8ae - e8cc
  JSR $E93D                
  JSR $E951                
  TAX                      
  JSR $EA4B                
  STA $04                  
  JSR $EA4B                
  STA $05                  
: LDA $04               
  ; problem, this is not writing attributes correctly   
  STA VMDATAL ; PpuData_2007         
  LDA $05                  
  STA VMDATAL ; PpuData_2007         
  DEX                      
  BNE :-
  RTS          

  ; e8cd - e8e0      
  JSR $E93D                
  JSR $E951                
  TAX                      
  JSR $EA4B       
  ; also not writing attributes correctly               
: STA VMDATAL ; PpuData_2007         
  CLC                      
  ADC #$01                 
  DEX                      
  BNE :-
  RTS                      

.byte $20, $3D, $E9, $20, $51, $E9, $20, $6E, $E9, $20, $4B, $EA, $AA, $84, $01, $A0
.byte $00, $B1, $0C, $8D, $07, $20, $C8, $8A, $8D, $07, $20, $C6, $02, $D0, $F2

;0xe900
.byte $A4, $01, $60

;0xe903
  JSR $E93D                
  JSR $E951                
  JSR $EA4B                
  TAX                      
: JSR $EA4B                
  STA VMDATAL         
  TXA                      
  STA VMDATAL         
  DEC $02                  
  BNE :-             
  RTS                      


.byte $20, $3D, $E9, $20
.byte $51, $E9, $20, $4B, $EA, $85, $03, $20, $4B, $EA, $85, $04, $A5, $03, $8D, $07
.byte $20, $E6, $03, $A5, $04, $8D, $07, $20, $C6, $02, $D0, $F0, $60                  



; 0xe93d  - Load the PPU Address to write next group (from 0x08), write it after adding $00
  NOP ; LDA PpuStatus_2002    
  NOP
  NOP   
  JSR $EA4B                
  TAX                      
  JSR $EA4B                
  CLC                      
  ADC $00                  
  STA VMADDH         
  STX VMADDL         
  RTS                      

; 0xe951 - Load # of tiles and control V or H write, 
  JSR $EA4B                
  TAX                      
  AND #$80                 
  PHP                      
             
  LDA VMAIN_CONTROL_STATE          ; AND #$FB    
  AND #$FE
  PLP                      
  BEQ :+  
  ; change the increment to add 32 instead of 1, inc on VMADDH    
  ORA #$01 ; ORA #$04                 
: STA VMAIN_CONTROL_STATE ; we store in VMAIN instead of PPU Control since that's what controls V vs. H write
  STA VMAIN ; PpuControl_2000 

  TXA                      
  AND #$7F                 
  STA $02                  
  RTS 

; 0xe96e
  JSR $EA4B                
  STA $0C                  
  JSR $EA4B                
  STA $0D                  
  RTS                      

;0xe979
  JSR $E994                
  STY $01                  
  JSR $E9CF                
  BCS :+                
  JSR $E9E6                
  BCS :++
: JSR $EA1C                
: JSR $EA27                
  JSR $EA3B                
  LDY $01                  
  RTS         

; 0xe994
  LDA #$00                 
  STA $05                  
  STA $06                  
  STA $07                  
  JSR $E93D                
  JSR $EA4B                
  STA $02                  
  TAX                      
  JSR $EA4B                
  STA $0C                  
  JSR $EA4B                
  STA $0D                  
  JSR $EA4B                
  STA $03                  
  LDA $EA55,X              
  STY $01                  
  TAY                      
: LDA ($0C),Y              
  STA $0005,Y              
  DEY                      
  BPL :-      
  LDY $01                  
  LDX #$06                 
  LDA #$00                 
: STA $0128,X              
  DEX                      
  BPL :-                
  RTS                      

;0xe9cf
  LDX $02                  
  LDA $EA65,X              
  TAX                      
  SEC                      
  LDA $05                  
  SBC $EA6D,X              
  LDA $06                  
  SBC $EA6E,X              
  LDA $07                  
  SBC $EA6F,X              
  RTS                      

; 0xE9E6
  LDX #$00                 
  LDY #$00                 
: JSR $E9F6                
  INX                      
  INY                      
  INY                      
  INY                      
  CPX #$07                 
  BCC :-                
  RTS                      

; 0xE9F6
: SEC                      
  LDA $05                  
  SBC $EA70,Y              
  STA $0D                  
  LDA $06                  
  SBC $EA71,Y              
  STA $0E                  
  LDA $07                  
  SBC $EA72,Y              
  BCC :+               
  STA $07                  
  LDA $0E                  
  STA $06                  
  LDA $0D                  
  STA $05                  
  INC $0128,X              
  BNE :-               
: RTS                      

; ea1c
.byte $A2, $06, $A9, $09 
.byte $9D, $28, $01, $CA, $10, $FA, $60  

; 0xea27
  LDX #$00                 
: LDA $0128,X              
  CMP #$00                 
  BNE :+         
  LDA $03                  
  STA $0128,X              
  INX                      
  CPX #$06                 
  BCC :-           
: RTS                      
  
  LDX $02                  
  LDA $EA5D,X              
  TAY                      
: LDA $0128,Y              
  STA VMDATAL         
  INY                      
  DEX                      
  BNE :-

; 0xEA4B: Read ($08),Y, then, if incrementing Y would roll back to 00 bump $09
@read_next_value_from_08_addr_and_inc:
  LDA ($08),Y              
  PHP                      
  INY                      
  BNE :+            
  INC $09                  
: PLP                      
  RTS                      

.byte $00, $00, $00, $01, $01, $02, $02, $02, $07, $06, $05
.byte $04, $03, $02, $01, $00, $15, $12, $0F, $0C, $09, $06, $03, $00, $80, $96, $98
.byte $40, $42, $0F, $A0, $86, $01, $10, $27, $00, $E8, $03, $00, $64, $00, $00, $0A
.byte $00, $00, $01, $00, $00, $A0, $04, $D0, $05, $20, $BB, $EA, $A0, $17, $B9, $3E
.byte $01, $99, $57, $01, $88, $10, $F7, $A5, $AA, $8D, $70, $01, $A5, $A6, $8D, $71
.byte $01, $60, $20, $BB, $EA, $A0, $17, $B9, $57, $01, $99, $3E, $01, $88, $10, $F7
.byte $AD, $70, $01, $85, $AA, $AD, $71, $01, $85, $A6, $60, $A0, $0C, $A9, $00, $99
.byte $31, $01, $88, $10, $FA, $60, $AD, $4F, $01, $C9, $63, $B0, $09, $EE, $4F, $01
.byte $A9, $01, $20, $F0, $E2, $18, $60, $A5, $3A, $29, $F0, $D0, $F9, $A5, $3B, $29
.byte $0F, $AA, $A5, $3A, $29, $0F, $C9, $02, $F0, $09, $C9, $05, $F0, $05, $DD, $F8
.byte $EA, $D0, $E3, $A9, $00, $4C, $90, $CA, $0B, $0B, $0A, $0D, $0B, $0B, $0B, $0A


; 0xEB00
.byte $00, $AD, $2F, $01, $4A, $B0, $16

@set_up_bank_switching:
@nes_eb07:
  ; sets horizontal or vertical mirroring, 
  ; vertical mirroring is set via eb1d below
  ; and fix last bank at $C000 and switch 16 KB bank at $8000
  LDA #$0F    
  ; STA $9FFF                
  ; #$0F = Horizontal mirroring (for vertical levels)
  ; #$0E = Vertical mirroring (for horizontal levels)
@set_mirroring:
  AND #$01
  BEQ :+
  LDA #$22
  BRA :++
: LDA #$21
: STA BG1SC
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  RTS  

; 0xeb1d
  ; Set Vertical instead of Horizontal Mirroring
  LDA #$0E
  BNE @set_mirroring

; EB21 - eb2e , we hijack this to do stuff in the main game loop
  JSL nes_eb21_replacement
  .byte $EA, $EA, $EA, $EA, $EA, $EA, $EA, $EA
  RTS

; 0xeb2e
; Appears to kick off the OAM DMA.  We'll likely need to jml to some SNES specific code
  ; JSL convert_attributes
  
  NOP ; LDA #$00                 
  NOP
  NOP ; STA OamAddr_2003         
  NOP
  NOP
  NOP ; LDA #$02                 
  NOP
  NOP ; STA SpriteDma_4014       
  NOP 
  NOP
  RTS                      

@nes_eb39:
@store_controller_to_zp:
  LDX #$01                 
  STX JOYSER0           
  DEX                      
  STX JOYSER0          
  
  LDX #$08                
: LDA JOYSER0           
  LSR A
  ROL $F6
  LSR A
  ROL $00
  LDA JOYSER1
  LSR A                    
  ROL $F7
  LSR A
  ROL $01
  DEX
  BNE :-

  LDA $00
  ORA $F6
  STA $F6
  LDA $01
  ORA $F7
  STA $F7

  LDX #$01
: LDA $F6, X
  TAY
  EOR $F8,X                
  AND $F6,X                
  STA $F6,X                
  STY $F8,X                
  DEX                      
  BPL :-
  RTS  

@fill_vram_and_attribute:
; 0xeb76
  STA $00                  
  STX $01                  
  STY $02                  
  
  ;LDA PpuStatus_2002       
  LDA #$8F
  STA INIDISP
  STA INIDISP_STATE

  ; Set VRAM increments to increment on HB
  LDA VMAIN_CONTROL_STATE             ; AND #$FB                 
  ORA #$80           
  STA VMAIN            ; STA PpuControl_2000

  LDA $00                  
  STA VMADDH
    
  LDY #$00                 
  STY VMADDL
  
  LDX #$04                 
  CMP #$20                 
  BCS :+         
  LDX $02                  
: LDY #$00  
: LDA $01
  STA VMDATAL
  ; we set #$01 here to use the 2nd page of tiles, which are our background tiles
  LDA #$00                    
  STA VMDATAH  

  DEY                      
  BNE :-                
  DEX                      
  BNE :-     

  LDA VMAIN_CONTROL_STATE
  STA VMAIN

; the rest of this is clearing out attributes
; these aren't even in the same place on SNES, so we'll 
; just not do anything for now.   

; .byte $EA, $EA      ;  LDY $02                  
; .byte $EA, $EA      ;  LDA $00                  
; .byte $EA, $EA      ;  CMP #$20                 
; .byte $EA, $EA      ;  BCC :+
.byte $EA, $EA      ;  ADC #$02                   
; .byte $EA, $EA, $EA ;  STA PpuAddr_2006           
.byte $EA, $EA      ;  LDA #$C0                   
.byte $EA, $EA, $EA ;  STA PpuAddr_2006         
.byte $EA, $EA      ;  LDX #$40                 
.byte $EA, $EA, $EA ;  STY PpuData_2007           
.byte $EA           ;  DEX                      
.byte $EA, $EA      ;  BNE EB9D
;.byte $EA, $EA      ;  LDX $01                  (RECLAIMED)
.byte $EA, $EA, $EA ;  LDA $0100                
; .byte $EA, $EA, $EA ;  STA PpuControl_2000      (RECLAIMED ABOVE)
 
  RTS                      

; 0xEBC9
  ; LDA PpuStatus_2002   
  LDA $1B                  
  AND #$01                 
  STA $00                  
  LDA $1A                  
  EOR #$FF                 
  AND #$01                 
  ASL A                    
  ORA $00                  
  STA $00
  NOP
  NOP
  ; STZ PAUSE_HDMA  
  ; STA $00 
  ; STZ PAUSE_HDMA  
  LDA STORED_OFFSETS_SET
  BEQ :+
  JSL reset_to_stored_screen_offsets
: LDA PPU_CONTROL_STATE                
  AND #$FC                 
  ORA $00
  JSL store_to_ppu_control
  JSL setup_hdma   

  ; NOP
  ; NOP
  ; NOP
  ; LDA $FD                  
  ; STA BG1VOFS ; STA PpuScroll_2005       
  ; LDA $1B          
  ; ; NES stores the Horizontal Offset now, but uh.. I don't scroll right yet

  ; LDA $1B                  
  ; AND #$01         
  ; ; this will move us to the 2nd BG   
        
  ; STA $00                  
  ; LDA $1A                  
  ; EOR #$FF                 
  ; AND #$01   
  ; STA BG1VOFS ; STA PpuScroll_2005                    

  ; ASL A                    
  ; ORA $00                  
  ; STA $00                  
  ; ; NES is resetting back to $2000 base name table
  ; LDA PPU_CONTROL_STATE                
  ; AND #$FC                 
  ; ORA $00                  
  ; STA NMITIMEN
  ; STA PPU_CONTROL_STATE
  
  RTS                      

; 0xEBF5
  LDA #$00                 
  STA $04                  
  STA $05                  
: LDA $00                  
  SEC                      
  SBC #$10                 
  STA $02                  
  LDA $01                  
  SBC #$27                 
  BCC :+
  STA $01                  
  LDA $02                  
  STA $00                  
  BCS :-               
: LDA $00                  
  SEC                      
  SBC #$E8                 
  STA $02                  
  LDA $01                  
  SBC #$03                 
  BCC :+              
  STA $01                  
  LDA $02                  
  STA $00                  
  LDA $05                  
  ADC #$0F                 
  STA $05                  
  BNE :-                
: LDA $00                  
  SEC                      
  SBC #$64                 
  STA $02                  
  LDA $01                  
  SBC #$00                 
  BCC :+                
  STA $01                  
  LDA $02                  
  STA $00                  
  LDA $05                  
  ADC #$00                 
  STA $05                  
  BNE :-                
: LDA $00                  
  SEC                      
  SBC #$0A                 
  STA $02                  
  LDA $01                  
  SBC #$00                 
  BCC :+                
  STA $01                  
  LDA $02                  
  STA $00                  
  LDA $04                  
  ADC #$0F                 
  STA $04                  
  BNE :-                
: LDA $00                  
  ORA $04                  
  STA $04                  
  RTS                      

; 0xEC68
.byte $A2, $38, $A0, $05, $A9, $00, $9D, $01
.byte $07, $A9, $F8, $9D, $00, $02, $9D, $00, $07, $E8, $E8, $E8, $E8, $88, $10, $EC
.byte $60, $A5, $18, $29, $20, $F0, $0C, $E6, $A5, $A5, $A5, $09, $80, $85, $A5, $20
.byte $68, $EC, $60, $A5, $A5, $29, $7F, $85, $A5, $60, $A0, $00, $B9, $EE, $ED, $9D
.byte $00, $02, $E8, $E8, $E8, $C8, $B9, $EE, $ED, $9D, $00, $02, $E8, $C8, $E0, $20
.byte $90, $EA, $60, $A2, $FC, $A0, $04, $20, $1C, $ED, $A5, $14, $29, $03, $F0, $03
.byte $4C, $10, $ED, $A2, $00, $A0, $10, $20, $9C, $EC, $A9, $D0, $4C, $FC, $EC, $20
.byte $10, $ED, $20, $F5, $EC, $20, $EE, $EC, $60, $AD, $2F, $01, $C9, $03, $F0, $EF
.byte $A5, $14, $29, $07, $F0, $2A, $C9, $01, $F0, $10, $C9, $02, $F0, $07, $A2, $FC
.byte $A0, $00, $4C, $1C, $ED, $A2, $00, $20, $9A, $EC, $A9, $18, $85, $04, $A2, $0C

; 0xED00
.byte $A5, $AA, $85, $02, $A5, $A6, $85, $03, $20, $74, $ED, $A5, $03, $85, $A6, $60
.byte $A2, $00, $4C, $3D, $ED, $20, $FC, $EC, $20, $10, $ED, $60, $B9, $35, $ED, $9D
.byte $00, $02, $B9, $36, $ED, $9D, $01, $02, $B9, $37, $ED, $9D, $02, $02, $B9, $38
.byte $ED, $9D, $03, $02, $60, $10, $27, $01, $18, $C8, $27, $01, $78, $AD, $4A, $01
.byte $85, $00, $AD, $4B, $01, $85, $01, $20, $F5, $EB, $A5, $04, $48, $29, $F0, $20
.byte $26, $EE, $09, $60, $9D, $05, $02, $68, $29, $0F, $09, $60, $9D, $09, $02, $A5
.byte $05, $29, $0F, $09, $60, $9D, $01, $02, $A9, $01, $9D, $02, $02, $9D, $06, $02
.byte $9D, $0A, $02, $60, $8A, $48, $A4, $02, $C0, $05, $90, $02, $A0, $04, $84, $00
.byte $A5, $04, $9D, $00, $02, $E8, $A9, $87, $9D, $00, $02, $E8, $A9, $01, $9D, $00
.byte $02, $E8, $E8, $88, $10, $EA, $A5, $03, $4A, $4A, $4A, $C5, $00, $90, $0F, $F0
.byte $0D, $A5, $00, $18, $69, $01, $0A, $0A, $0A, $38, $E9, $01, $85, $03, $68, $AA
.byte $A9, $80, $A4, $03, $C0, $08, $90, $20, $C0, $10, $90, $19, $C0, $18, $90, $12
.byte $C0, $20, $90, $0B, $C0, $28, $90, $04, $A0, $27, $84, $03, $9D, $0D, $02, $9D
.byte $09, $02, $9D, $05, $02, $9D, $01, $02, $98, $29, $38, $4A, $85, $00, $8A, $18
.byte $65, $00, $AA, $98, $49, $FF, $29, $07, $09, $80, $9D, $01, $02, $60, $10, $20
.byte $10, $28, $10, $30, $F8, $18, $F8, $20, $F8, $28, $F8, $30, $F8, $38, $C8, $80

; 0xEE00
.byte $C8, $88, $C8, $90, $F8, $78, $F8, $80, $F8, $88, $F8, $90, $F8, $98

  LDX #$0C                 
  LDA #$68                 
  LDY #$4F                 
: STA $0203,X              
  CLC                      
  ADC #$08                 
  INX                      
  INX                      
  INX                      
  INX                      
  CPX #$20                 
  BCC :-             
  TYA                      
  JMP $ED15                

  LSR A                    
  LSR A                    
  LSR A                    
  LSR A                    
  RTS                      
  
  ASL A                    
  TAY                      
  INY                      
  PLA                      
  STA $00                  
  PLA                      
  STA $01                  
  LDA ($00),Y              
  PHA                      
  INY                      
  LDA ($00),Y              
  STA $01                  
  PLA                      
  STA $00                  
  JMP ($0000)              


; 0xEE42
@write_palatte_data_to_vram:
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  NOP
  JSL write_palette_data
  JMP $EBC9

; nes ee6a
@handle_input:
  LDA JOYSER0  ; NES reads from Ctrl1_4016, but SNES has 2.  We want to read from the hi bits      
  AND BUTTON_DOWN                 
  STA $73                  
  JSR @store_controller_to_zp                
  LDA $F8                  
  STA $16                  
  STA $17                  
  LDA $F6                  
  STA $18                  
  STA $19                  
  RTS  
  
; ee81
.byte $AD, $16, $40, $29, $04, $85, $73, $20, $39, $EB, $A5, $F8, $85, $17, $A5
.byte $F6, $85, $19, $60

; 0xee94
  INC $14       
  BNE :+
  INC $15       
: RTS   
; 0xee9b                   
  LDX #$60                 
  LDY $43      
@ee9f:            
  LDA #$1F                 
  STA $00                  
: LDA $0200,X              
  PHA                      
  LDA $0200,Y              
  STA $0200,X              
  PLA                      
  STA $0200,Y              
  INX                      
  INY                      
  DEC $00                  
  BPL :-             
  RTS                      
;0xeeb8
  LDA $43                  
  CLC                      
  ADC #$20                 
  CMP #$60                 
  BCS :+                
  LDA #$60                 
: STA $43                  
  TAY                      
  LDX #$60                 
  BNE @ee9f               
  LDA #$00                 
  TAX                      
: STA $0200,X              
  STA $0700,X              
  INX                      
  BNE :-
  LDA #$F8                 
: STA $0200,X              
  STA $0700,X              
  INX                      
  INX                      
  INX                      
  INX                      
  BNE :-              
  RTS                      

; 0xeee5
  LDA #$00                 
  STA $FD          
  STA $1A                  
  STA $FE                  
  STA $1B                  
  RTS                      

; 0xEEF0 - Disable vblank, bgs and sprites
  ; LDA PPU_CONTROL_STATE
  ; NES does AND #$7F here          
  ; AND #$7F                 
  ; STA PPU_CONTROL_STATE  
  JSL disable_nmi_force_vblank
  .byte $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea
  .byte $ea, $ea, $ea, $ea
 
  RTS  

; 0xEF01 enable vblank
  JSL enable_nmi
  
  .byte $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea
  .byte $ea, $ea

  RTS                

; 0xEF12
.byte $E6, $00, $D0, $02, $E6, $01, $60, $E6, $02, $D0, $02, $E6, $03, $60
.byte $A9, $20, $20, $27, $EF, $A9, $24, $A2, $12, $A0, $00, $4C, $76, $EB, $A0, $7F
.byte $A9, $00, $99, $B0, $03, $88, $10, $FA, $60

; 0xEF39 - EF4D (properties)
  LDA #$23
  JSR $EF5A
: LDA $03B0,X
  STA VMDATAL
  INX
  CPX #$40
  BCC :-
  LDA #$2B  ; prob needs adjusting
  JSR $EF5A
: LDA $03F0,X
  STA VMDATAL
  INX
  CPX #$40
  BCC :-
  RTS

; 0xEF5A - EF64
  STA VMADDH
  LDA #$C0
  STA VMADDL
  LDX #$00
  RTS


; EF65
.byte $A5, $00, $18, $69, $20, $85, $00, $A5, $01, $69, $00
.byte $85, $01, $60


; 0xEF73
  LDA #$20                 
  BNE :+               
  JSR $EF73                
  LDA #$24                 
: LDX #$12                 
  LDY #$00                 
  JMP $EB76

; EF83
.byte $A9, $00, $F0, $02, $A9, $1E, $8D, $01, $20, $60, $05, $07, $08
.byte $06, $07, $08, $05, $06, $08, $0A, $05, $09, $05, $07, $06, $06, $04, $08, $00
.byte $01, $02
 ; prices (times 10 hearts, in decimal)
.byte $04, $02, $05 ; chalice, discount, increased
.byte $16, $10, $24 ; bottle, discount, increased
.byte $01, $01, $02 ; hammer, discount, increased
.byte $12, $07, $20 ; feather
.byte $99, $99, $99 ; torch
.byte $99, $99, $99 ; pencil
; black market
.byte $15 ; bottle
.byte $20 ; barrel
.byte $17 ; feather
.byte $01 ; fire
.byte $02 ; bow
.byte $03 ; shield

.byte $01, $00, $00, $00, $00, $01
.byte $01, $00, $00, $00, $01, $01, $01, $00, $00, $00, $01, $AE, $24, $00, $06, $93
.byte $22, $00, $07, $AB, $20, $01, $01, $71, $22, $01, $03, $D8, $26, $01, $04, $99
.byte $22, $01, $06, $B1, $25, $01, $0C, $2C, $24, $02, $02, $8E, $22, $02, $04, $43
.byte $25, $02, $06, $27, $20, $02, $0D, $01, $26, $02, $11, $46, $23, $FF, $FF, $00

; F000
.byte $01, $AF, $25, $00, $03, $AA, $27, $00, $05, $AD, $22, $00, $0A, $8C, $26, $00
.byte $0D, $76, $20, $00, $11, $76, $24, $00, $14, $A8, $25, $00, $17, $1E, $23, $00
.byte $19, $AA, $24, $01, $00, $A5, $20, $01, $01, $A4, $22, $01, $02, $A4, $22, $01
.byte $03, $A4, $24, $01, $04, $6A, $27, $01, $07, $89, $22, $01, $10, $9A, $26, $01
.byte $17, $9C, $22, $01, $1A, $9C, $26, $02, $07, $A8, $20, $02, $0A, $AB, $23, $02
.byte $0F, $AE, $25, $02, $13, $9F, $22, $02, $15, $AE, $26, $FF, $FF, $00, $00, $BE
.byte $27, $00, $09, $03, $24, $01, $03, $16, $23, $01, $05, $DC, $25, $01, $09, $88
.byte $26, $01, $0C, $49, $27, $02, $05, $5E, $26, $02, $0F, $B2, $25, $FF, $FF, $FF
.byte $FF, $00, $00, $00, $00, $80, $12, $12, $25, $1E, $29, $12, $12, $12, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $02, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $44, $61, $00, $84, $DA, $00, $B2, $00, $00, $00, $00, $0E, $00, $01
.byte $01, $00, $00, $00, $00, $01, $03, $06, $00, $00, $20, $29, $21, $0E, $0E, $0E

; F100
.byte $0E, $0E, $B0, $0C, $07, $12, $12, $12, $12, $12, $12, $12, $12, $00, $00, $00
.byte $12, $12, $12, $12, $12, $12, $12, $12, $00, $00, $00, $12, $12, $12, $12, $12
.byte $12, $12, $12, $00, $00, $00, $12, $12, $12, $12, $12, $12, $12, $12, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $11, $08
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02, $01
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $02
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $05, $00, $BE, $3E

; F200
@moved_nes_c0c9:
  LDA INIDISP_STATE
  ORA #$80
  STA INIDISP 
  LDA #$00                 
  TAY                       
  STZ VMADDL ; STA PpuAddr_2006         
  STZ VMADDH ; STA PpuAddr_2006
  
  JSR @switch_bank
  LDA $A0                  
  BNE :+   
  STZ $00                
  LDA #$A0                 
  STA $01 
  STA $03
  LDA #$08
  STA $02                
  LDX #$20          
  ; first set of tiles       
  JSR @copy_tile_data_banks                
  BEQ @c120                
: LDA #$80 
  STZ $00            
  STA $01
  STA $03  
  LDA #$08
  STA $02                
  LDX #$20                 
  JSR @copy_tile_data_banks                
  LDA $A0                  
  TAX                      
  LDA @c152,X              
  CMP #$80                 
  BEQ @c120             
  AND #$BF 

  STZ $00                   
  STA $01 
  STA $03
  LDA #$08
  STA $02                 
  LDA #$01                 
  JSR @switch_bank   

  LDA #$0C                 
  STA VMADDH               
  STZ VMADDL
  LDX #$04                 
  JSR @copy_tile_data_banks                
  LDA #$1C                 
  STA VMADDH         
  LDA #$00                 
  STA VMADDL
  LDX #$04                 
  JSR @copy_tile_data_banks   

@c120: 
  LDA $A0                  
  ASL A                    
  TAY                      
  LDA @c15c,Y              
  STA $00                  
  LDA @c15c+1,Y              
  STA $01                  
  LDY #$00                 
  LDA ($00),Y   
  STA $BE                 
  JSR @switch_bank                
  INY                      
  LDA ($00),Y              
  PHA                      
  INY                      
  LDA ($00),Y              
  STA $01                  
  PLA                      
  STA $00                  
  LDY #$59                 
: LDA ($00),Y              
  STA $7F00,Y              
  DEY                      
  BPL :-
  LDA #$10               
  JMP @ca90                

@c152:
  ; I might need to move/edit this
  ; it's a table of where tiles are at
.byte $A0, $80, $C0, $C0, $C8, $C8, $D0, $D0, $D8, $80
@c15c:
  ; this is an indirect jump table, pointing to c1a8, c1ab, c1ae, c1b1, c1b4, c1b7, c1ba, c1bd, c1c0, c1c3
.byte .lobyte(@c1a8)
.byte .hibyte(@c1a8)
.byte .lobyte(@c1a8+3)
.byte .hibyte(@c1a8+3)
.byte .lobyte(@c1a8+6)
.byte .hibyte(@c1a8+6)
.byte .lobyte(@c1a8+9)
.byte .hibyte(@c1a8+9)
.byte .lobyte(@c1a8+12)
.byte .hibyte(@c1a8+12)
.byte .lobyte(@c1a8+15)
.byte .hibyte(@c1a8+15)
.byte .lobyte(@c1a8+18)
.byte .hibyte(@c1a8+18)
.byte .lobyte(@c1a8+21)
.byte .hibyte(@c1a8+21)
.byte .lobyte(@c1a8+24)
.byte .hibyte(@c1a8+24)
.byte .lobyte(@c1a8+27)
.byte .hibyte(@c1a8+27)

@copy_tile_data_banks:
  LDA VMAIN_CONTROL_STATE
  ORA #$80
  STA VMAIN

: LDA ($00),Y
  STA VMDATAL
  
  LDA ($02),Y
  STA VMDATAH   

  INC $00
  INC $02             

  ; every 8 reads we need to skip 8, and write some zeros to VM
  LDA $00
  AND #$08
  BEQ :+
    INC $00
    INC $00
    INC $00
    INC $00
    INC $00
    INC $00
    INC $00
    INC $00
    INC $02
    INC $02
    INC $02
    INC $02
    INC $02
    INC $02
    INC $02
    INC $02
    stz VMDATAL
    stz VMDATAH    
    stz VMDATAL
    stz VMDATAH    
    stz VMDATAL
    stz VMDATAH    
    stz VMDATAL
    stz VMDATAH  
    stz VMDATAL
    stz VMDATAH    
    stz VMDATAL
    stz VMDATAH    
    stz VMDATAL
    stz VMDATAH    
    stz VMDATAL
    stz VMDATAH
  ; re-load from 00 for 
: LDA $00
  BNE :--

  INC $01
  INC $03
  DEX                      
  BNE :--               

  LDA VMAIN_CONTROL_STATE
  STA VMAIN

  RTS        

  @switch_bank:
  PHA                      
  ; disable NMI
  LDA PPU_CONTROL_STATE               
  AND #$7F
  STA NMITIMEN     

  PLA                      
  STA $B6
  INC A
  AND #$0F
  ORA #$A0

  STA $0802
  PHA
  PLB
  LDA #.lobyte(@bank_switch_jump)
  STA $0800
  LDA #.hibyte(@bank_switch_jump)
  STA $0801
  JML ($0800)
@bank_switch_jump:
;  re-enable NMI
  ;  LDA PpuStatus_2002  
  JSL load_nmitimen_from_state     
  NOP
  NOP    
  RTS    


; @enable_vblank:
;   LDA INIDISP_STATE
;   ORA #$80
;   STA INIDISP 
  
;   LDA PPU_CONTROL_STATE                
;   ORA #$80       
;   STA NMITIMEN            ; STA PpuControl_2000
;   STA NMITIMEN            ; STA PpuControl_2000
  
;   STA NMITIMEN            ; STA PpuControl_2000  
  
;   STA PPU_CONTROL_STATE               

  
;   ; STA TM ;STA PpuMask_2001    
;   ; PHA
;   ; AND #$0E
;   ; LSR A
;   ; STA $5001
;   ; PLA
;   ; AND #$F0
;   ; ORA $5001

; ; this should maybe just mess with inidisp.
;   LDA PPU_MASK_STATE 
;   STA TM

;   LDA #$7F
;   STA INIDISP
;   STA INIDISP_STATE

;   RTS

@ca90_replacement:
  ; PHA 
  ; .byte $ea ; LDA $0100                
  ;ORA $80                 
  ; STA INIDISP ; STA PpuControl_2000    
  ; PLA                      
  STA $BC

  LDA $B6
  PHA   

  ; INC A
  ; ORA #$A0
  ; PHA    

  LDA #.hibyte(@cac7 - 1) 
  PHA                      

  LDA #.lobyte(@cac7 - 1) 
  PHA                      

  LDA #$80                 
  STA $BD      

  LDA #$06                 
  STA $B6  

  ; STA $FFFF                
  ; LSR A                    
  ; STA $FFFF                
  ; LSR A                    
  ; STA $FFFF                
  ; LSR A                    
  ; STA $FFFF                
  ; LSR A                    
  ; STA $FFFF

  INC A
  AND #$0F
  ORA #$A0

  STA $0802
  STA JMP_REDIRECT_LB + 2
  ; NOP
  ; NOP
  
  PHA
  PLB

  LDA #.lobyte(:+)
  STA $0800

  LDA #.hibyte(:+)
  STA $0801

  JML ($0800)

: PHY
  PHA
  LDY #$00
  LDA ($00BC), Y
  STA JMP_REDIRECT_LB
  INY
  LDA ($00BC), Y
  STA JMP_REDIRECT_LB + 1
  PLA
  PLY



  JML (JMP_REDIRECT_LB)


@nesE7CB_replc:
; disable video while we do stuff
  PHK
  PLB
  LDA INIDISP_STATE
  ORA #$80
  STA INIDISP 

  LDY #$00  
@nesE7CD_replc:               
  JSR $EA4B                
  BNE @nesE7E1_replc             
  STZ VMAIN ; STA PpuControl_2000      ; set the increment to write on low address write and horizontal

  RTS

@nesE7E1_replc:
  BMI @nesE7CD_replc         
  SEC                      
  SBC #$01                 
  ASL A                    
  TAX                      
  LDA $E7FB,X              
  STA $0A                  
  LDA $E7FC,X              
  STA $0B                  
  LDA #.hibyte(@nesE7CD_replc - 1)                 
  PHA                      
  LDA #.lobyte(@nesE7CD_replc - 1)
  PHA                      
  JMP ($000A)        


@nes_e81b_replacement:
             
  JSR $EA4B   
  STA $00

; disable video while we do stuff
  LDA INIDISP_STATE
  ORA #$80
  STA INIDISP 

  ; increment on L byte
  LDA VMAIN_CONTROL_STATE
  AND $7F                
  STA VMAIN

  LDA $00
  STA VMADDH ; PpuAddr_2006    
  LDA #$00                 
  STA VMADDL ; PpuAddr_2006  

  STZ BG1VOFS
  LDA $00
  CMP #$24
  LDA #$00
  BCC :+
  INC A
: STA BG1VOFS 

  JSR $EA4B                
  JSR @nes_e83b               
  JSR $EA4B                
  TAX                      
  JSR $EA4B         

  JMP @nes_e84b     

 @nes_e83b: 
  LDX #$00                 
  JSR @nes_e861_replacement                
  JSR @nes_e861_replacement                
  JSR @nes_e861_replacement                 
  LDX #$C0                 
  JMP @nes_e861_replacement       

 @nes_e84b:  
  ; loads attributes       
  STX $0C                  
  STA $0D 
  LDA $00
  PHA
  LDA $01
  PHA                 
  PHY         
  STZ COLUMN_1_DMA
  STZ COL_ATTR_HAS_VALUES
  jsl load_0x40_attributes_from_ram_for_pause                
  PLY
  PLA
  STA $01
  PLA
  STA $00
  PHK
  PLB
  ; LDA INIDISP_STATE
  ; STA INIDISP   

  ; LDA VMAIN_CONTROL_STATE
  ; STA VMAIN 

  RTS             

@nes_e861_replacement:   
: STA VMDATAL ; PpuData_2007  
  DEX                      
  BNE :-                
  RTS   

@nes_cb49_replacement:
  LDA $BE
  JSR $C17F
  JSR $007F33
  JSR $007F36
  JSR $007F39
  JSR $007F3C
  JSL convert_nes_attributes_and_immediately_dma_them
  STZ VMAIN
  LDA #$06
  JMP $C17F    

; F42x-something

.byte $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $7F, $F4, $ED, $DF, $FF, $BB, $FF, $FF
.byte $FF, $FF, $FF, $FB, $FF, $FF, $FF, $FB, $FF, $FF, $FF, $F7, $FF, $FE, $FF, $FF
.byte $FF, $FF, $EF, $FF, $FF, $FE, $FF, $FF, $9B, $3D, $E1, $50, $FF, $AA, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FE, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $EF, $FF, $FF, $FF, $F9, $EE, $F4, $FF, $FA, $FF, $FF
.byte $FF, $FF, $FF, $FF, $DF, $FF, $BF, $FF, $FF, $FF, $FE, $DD, $FF, $FE, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $BF, $EC, $70, $E9, $FF, $AA, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $EF, $EF, $FF, $FF, $FA, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $AB, $F5, $ED, $FD, $FF, $AA, $FF, $FF
.byte $FF, $7F, $FF, $FF, $FF, $FF, $FF, $FF, $7F, $FD, $FF, $FF, $FF, $FA, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FE, $FF, $FF, $EE, $5A, $DA, $C0, $FF, $AA, $FF, $FF

; F500
@nes_nmi_replacement:
  PHA                      
  LDA $B6                 
  PHA       
  INC A
  ORA #$A0
  STA JMP_REDIRECT_LB + 2               
  LDA #.hibyte(@post_jump_loc - 1)                 
  PHA                      
  LDA #.lobyte(@post_jump_loc - 1)                
  PHA                      
  LDA $BE                  
  JSR @switch_bank  

  LDA $6FFA
  STA JMP_REDIRECT_LB
  LDA $6FFB
  STA JMP_REDIRECT_LB + 1
  LDA $0802
  STA JMP_REDIRECT_LB + 2
  JML (JMP_REDIRECT_LB)

  @post_jump_loc:           
  LDA $0100                
  AND #$7F             
  STA NMITIMEN
  
  ; bank switch to wherever we were  
  PLA                      
  STA $B6
  INC A
  ; AND #$0F
  ORA #$A0
  STA $802
  PHA 
  PLB                   
  LDA #.lobyte(@bank_switch_jump2)
  STA $0800
  LDA #.hibyte(@bank_switch_jump2)
  STA $0801
  JML ($0800)
@bank_switch_jump2:
  JSL load_nmitimen_from_state ; LDA $0100                
  NOP                          ; STA NMITIMEN  
  NOP
  PLA      

  JSL translate_nes_sprites_to_oam

  setAXY16
  PLY
  PLX
  PLA
  setAXY8    
  PLP          
  RTI  

.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $10, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $6F, $2A

; F600
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $F7, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FE, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $F7, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $BF, $FF, $FF

; F700
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00

; F800
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $EF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $F9, $FD, $FF, $FF, $FF, $FF, $FF
.byte $FE, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FB, $FC, $FD, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FE, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $7F, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FB, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $F7, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FE, $FE, $FF, $DF, $FF, $FF, $FF

; F900
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $05, $00

; FA00
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $BF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $EF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $DF, $FF, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $BF, $F6, $FF, $FF
.byte $FF, $FF, $FF, $FF, $EF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $7F, $FF, $FF
.byte $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF

; FB00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
.byte $00, $00, $00, $00, $00, $00, $00, $00, $42, $41, $00, $80, $0C, $04, $02, $00

