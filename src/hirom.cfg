MEMORY {
    ZEROPAGE:   start =      0,     size =  $100;
	STACK:      start = $000100,    size = $0100;
    RAM:        start =    $200,    size = $1800;
    SRAM:       start =   $6000,    size = $2000, type = rw;

    ROM0:       start = $A00000,    size = $8000, fill = yes, type = rw;   
	ROM1:       start = $A08000,    size = $8000, fill = yes;
    HDMA_LOOKUP:start = $A0A000,    size = $2000, fill = yes;
    PRGA0C:     start = $A0C000,    size = $4000, fill = yes;
    # ROM1C:   start = $80C000, size = $4000;

	SRAM1:    start = $A10000, size = $8000, type = rw, fill = yes;  
    PRGA1:     start = $A18000, size = $4000, fill = yes;
    PRGA1C:    start = $A1C000, size = $3C00, fill = yes;
    PRGA1F:    start = $A1FC00, size = $0400, fill = yes;

	SRAM2:    start = $A20000, size = $8000, type = rw, fill = yes;  
    PRGA2:     start = $A28000, size = $4000, fill = yes;
    PRGA2C:    start = $A2C000, size = $3C00, fill = yes;
    PRGA2F:    start = $A2FC00, size = $0400, fill = yes;

	SRAM3:    start = $A30000, size = $8000, type = rw, fill = yes;  
    PRGA3:     start = $A38000, size = $4000, fill = yes;
    PRGA3C:    start = $A3C000, size = $3C00, fill = yes;
    PRGA3F:    start = $A3FC00, size = $0400, fill = yes;

	SRAM4:    start = $A40000, size = $8000, type = rw, fill = yes;  
    PRGA4:     start = $A48000, size = $4000, fill = yes;
    PRGA4C:    start = $A4C000, size = $3C00, fill = yes;
    PRGA4F:    start = $A4FC00, size = $0400, fill = yes;

	SRAM5:    start = $A50000, size = $8000, type = rw, fill = yes;  
    PRGA5:     start = $A58000, size = $4000, fill = yes;
    PRGA5C:    start = $A5C000, size = $3C00, fill = yes;
    PRGA5F:    start = $A5FC00, size = $0400, fill = yes;

	SRAM6:    start = $A60000, size = $8000, type = rw, fill = yes;  
    PRGA6:     start = $A68000, size = $4000, fill = yes;
    PRGA6C:    start = $A6C000, size = $3C00, fill = yes;
    PRGA6F:    start = $A6FC00, size = $0400, fill = yes;

	SRAM7:    start = $A70000, size = $8000, type = rw, fill = yes;  
    PRGA7:     start = $A78000, size = $4000, fill = yes;
    PRGA7C:    start = $A7C000, size = $3C00, fill = yes;
    PRGA7F:    start = $A7FC00, size = $0400, fill = yes;
    

    # ROM:        start = $A08000,     size = $8000, fill = yes;
    # BANK1:      start = $A18000,     size = $8000, fill = yes;
    # BANK2:      start = $A28000,     size = $8000, fill = yes;
    # BANK3:      start = $A38000,     size = $8000, fill = yes;

    # SRAM:       start = $F00000,    size = $8000, type = rw;
    # SRBANK1:    start = $F10000,    size = $8000, type = rw;
    # SRBANK2:    start = $F20000,    size = $8000, type = rw;
    # SRBANK3:    start = $F30000,    size = $8000, type = rw;
    # SRBANK4:    start = $F40000,    size = $8000, type = rw;
    # SRBANK5:    start = $F50000,    size = $8000, type = rw;
    # SRBANK6:    start = $F60000,    size = $8000, type = rw;
    # SRBANK7:    start = $F70000,    size = $8000, type = rw;
    # SRBANK8:    start = $F80000,    size = $8000, type = rw;
    # SRBANK9:    start = $F90000,    size = $8000, type = rw;
    # SRBANK10:   start = $FA0000,    size = $8000, type = rw;
    # SRBANK11:   start = $FB0000,    size = $8000, type = rw;
    # SRBANK12:   start = $FC0000,    size = $8000, type = rw;
    # SRBANK13:   start = $FD0000,    size = $8000, type = rw;
    # SRBANK14:   start = $FE0000,    size = $8000, type = rw;
    # SRBANK15:   start = $FF0000,    size = $8000, type = rw;
}

SEGMENTS {
    ZEROPAGE:   load = ZEROPAGE,                   type = zp;
    # RAM0:       load = RAM,         align = $100,  type = bss;   
    
    ROM0:       load = ROM0,         start = $A00000;
    PRGA0:      load = ROM1,         start = $A08000;
    HDMA_LOOKUP:load = ROM1,         start = $A0A000;    
    PRGA0C:     load = ROM1,         start = $A0C000;

    CODE:       load = ROM1,         start = $A0FE00;
    # ROMDATA:    load = ROM1,                                      optional = yes;

    # ROMREGINFO: load = ROM,         start = $FFB0,              optional = yes;
    HEADER:     load = ROM1,         start = $A0FFC0,              optional = yes;
    ROMSPEC:    load = ROM1,         start = $A0FFD5,              optional = yes;
    VECTOR:     load = ROM1,         start = $A0FFE0;

    SRAM1:      load = SRAM1,        start = $A10000;
    PRGA1:      load = PRGA1,        start = $A18000;    
    PRGA1C:     load = PRGA1C,       start = $A1C000; 
    PRGA1F:     load = PRGA1F,       start = $A1FC00;
    
    SRAM2:      load = SRAM2,        start = $A20000;
    PRGA2:      load = PRGA2,        start = $A28000;    
    PRGA2C:     load = PRGA2C,       start = $A2C000; 
    PRGA2F:     load = PRGA2F,       start = $A2FC00;

    SRAM3:      load = SRAM3,        start = $A30000;
    PRGA3:      load = PRGA3,        start = $A38000;    
    PRGA3C:     load = PRGA3C,       start = $A3C000;  
    PRGA3F:     load = PRGA3F,       start = $A3FC00;   

    SRAM4:      load = SRAM4,        start = $A40000;
    PRGA4:      load = PRGA4,        start = $A48000;     
    PRGA4C:     load = PRGA4C,       start = $A4C000; 
    PRGA4F:     load = PRGA4F,       start = $A4FC00;

    SRAM5:      load = SRAM5,        start = $A50000;
    PRGA5:      load = PRGA5,        start = $A58000;    
    PRGA5C:     load = PRGA5C,       start = $A5C000; 
    PRGA5F:     load = PRGA5F,       start = $A5FC00;
    
    SRAM6:      load = SRAM6,        start = $A60000;
    PRGA6:      load = PRGA6,        start = $A68000;    
    PRGA6C:     load = PRGA6C,       start = $A6C000; 
    PRGA6F:     load = PRGA6F,       start = $A6FC00;  

    SRAM7:      load = SRAM7,        start = $A70000;
    PRGA7:      load = PRGA7 ,       start = $A78000;    
    PRGA7C:     load = PRGA7C,       start = $A7C000;   
    PRGA7F:     load = PRGA7F,       start = $A7FC00;

    # WRAM:       load = WRAM,        align = $8000,  type = bss;
    # WRBANK1:    load = WRBANK1,     align = $8000,  type = bss, optional = yes;
    # WRBANK2:    load = WRBANK2,     align = $8000,  type = bss, optional = yes;
    # WRBANK3:    load = WRBANK3,     align = $8000,  type = bss, optional = yes;

    # SRAM:       load = SRAM,        align = $8000,  type = bss, optional = yes;
    # SRBANK1:    load = SRBANK1,     align = $8000,  type = bss, optional = yes;
    # SRBANK2:    load = SRBANK2,     align = $8000,  type = bss, optional = yes;
    # SRBANK3:    load = SRBANK3,     align = $8000,  type = bss, optional = yes;
    # SRBANK4:    load = SRBANK3,     align = $8000,  type = bss, optional = yes;
    # SRBANK5:    load = SRBANK3,     align = $8000,  type = bss, optional = yes;
    # SRBANK6:    load = SRBANK3,     align = $8000,  type = bss, optional = yes;
    # SRBANK7:    load = SRBANK3,     align = $8000,  type = bss, optional = yes;
    # SRBANK8:    load = SRBANK3,     align = $8000,  type = bss, optional = yes;
    # SRBANK9:    load = SRBANK3,     align = $8000,  type = bss, optional = yes;
    # SRBANK10:   load = SRBANK3,     align = $8000,  type = bss, optional = yes;
    # SRBANK11:   load = SRBANK3,     align = $8000,  type = bss, optional = yes;
    # SRBANK12:   load = SRBANK3,     align = $8000,  type = bss, optional = yes;
    # SRBANK13:   load = SRBANK3,     align = $8000,  type = bss, optional = yes;
    # SRBANK14:   load = SRBANK3,     align = $8000,  type = bss, optional = yes;
    # SRBANK15:   load = SRBANK3,     align = $8000,  type = bss, optional = yes;

}